{% extends "/base/base.html"%}

<!-- css block -->
{% block css_content %}
<style>
/**/
.bar {
	fill: steelblue;
	-webkit-transition: opacity .5s ease-in-out;
    transition: opacity .5s ease-in-out;
}

.bar:hover {
	opacity: 0.5;
}

.axis {
	font: 10px sans-serif;
}

.axis path,.axis line {
	fill: none;
	stroke: #000;
	shape-rendering: crispEdges;
}

.x.axis path {
	display: none;
}

/**/
.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(255, 255, 255, 0.8);
  color: #000;
  border-radius: 3px;
  border: rgba(100,100,100,0.9);
}

/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}
</style>
{% endblock %}

<!-- js block -->
{% block js_content %}
<script type="text/javascript" src="/js/d3.js"></script>
<script type="text/javascript" src="/js/d3_tips.js"></script>
{% endblock %} {% block main_content %}
<div id="line-chart-container"></div>

<!-- js -->
<script type="text/javascript">
	var margin = {
		top : 20,
		right : 20,
		bottom : 30,
		left : 40
	}, width = 960 - margin.left - margin.right, height = 500 - margin.top
			- margin.bottom;

	var x = d3.scale.ordinal().rangeRoundBands([ 0, width ], .2);

	var y = d3.scale.linear().range([ height, 0 ]);

	var xAxis = d3.svg.axis().scale(x).orient("bottom");

	var yAxis = d3.svg.axis().scale(y).orient("left").ticks(10, "");
	
	var tip = d3.tip()
	  .attr('class', 'd3-tip')
	  .offset([-10, 0])
	  .html(function(d) {
	    return "<strong>Frequency:</strong> <span style='color:red'>" + d.frequency + "</span>";
	  });

	// init svg
	var svg = d3.select("div#line-chart-container").append("svg").attr("width",
			width + margin.left + margin.right).attr("height",
			height + margin.top + margin.bottom).append("g").attr("transform",
			"translate(" + margin.left + "," + margin.top + ")");

	
	// read data
	d3.tsv("/mis/data.tsv", function(error, data) {
		x.domain(data.map(function(d) {
			return d.date;
		}));
		y.domain([ 0, d3.max(data, function(d) {
			return d.frequency;
		}) ]);

		svg.append("g").attr("class", "x axis").attr("transform",
				"translate(0," + height + ")").call(xAxis);

		svg.append("g").attr("class", "y axis").call(yAxis).append("text")
				.attr("transform", "rotate(-90)").attr("y", 6).attr("dy",
						".71em").style("text-anchor", "end").text("Frequency");

		svg.selectAll(".bar").data(data).enter().append("rect").attr("class",
				"bar").attr("x", function(d) {
			return x(d.date);
		}).attr("width", x.rangeBand()).attr("y", function(d) {
			return y(d.frequency);
		}).attr("height", function(d) {
			return height - y(d.frequency);
		}).on('mouseover', tip.show).on('mouseout', tip.hide);
		
		var rects = svg.selectAll("rect").attr("title", function(d){
            return d.frequency;
        });
	});
	
	// apply tips
	svg.call(tip);

	// if need to parse data datetime
	var parseDate = d3.time.format("%d-%b-%y").parse;
	
</script>
{% endblock %}
