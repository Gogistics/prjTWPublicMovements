//show leaflet map
var map;
(function() {

	// map attr. info.
	var mbAttr = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, '
			+ '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, '
			+ 'Imagery © <a href="http://mapbox.com">Mapbox</a>', mbUrl = 'https://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png';

	// gray scale map
	var grayscale = L.tileLayer(mbUrl, {
		id : 'examples.map-20v6611k',
		attribution : mbAttr
	}), streets = L.tileLayer(mbUrl, {
		id : 'examples.map-i86knfo3',
		attribution : mbAttr
	}), leaflet_osm = L
			.tileLayer(
					'http://{s}.tile.osm.org/{z}/{x}/{y}.png',
					{
						attribution : '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
					});

	// marker config.
	var my_icon = L.icon({
		iconUrl : '/leaflet/images/kp_icon_2.png',
		shadowUrl : '/leaflet/images/marker-shadow.png',

		iconSize : [ 48, 50 ],
		shadowSize : [ 50, 50 ],
		iconAnchor : [ 25, 49 ],
		shadowAnchor : [ 12, 48 ],
		popupAnchor : [ -3, -43 ]
	});

	// defualt config. of map view
	var config = {
		initLatLng : new L.LatLng(25.048104, 121.517033),
		initZoom : 15,
		minZoom : 15,
		maxZoom : 15
	};

	// temporary images paths which will be replaced with url paths
	var geo_info = [ {
		'geo_location' : [ 25.048104, 121.517033 ],
		'geo_description' : '台灣-台北車站 ',
		'geo_img' : '/img/locations/taipei_station.jpg'
	}, {
		'geo_location' : [ 25.040420, 121.516180 ],
		'geo_description' : '台大醫院',
		'geo_img' : '/img/locations/taiwan_national_hospital.jpg'
	}, {
		'geo_location' : [ 25.031827, 121.497941 ],
		'geo_description' : '台北-萬華區',
		'geo_img' : '/img/locations/wang_hwa.jpg'
	}, {
		'geo_location' : [ 25.029805, 121.533131 ],
		'geo_description' : '台北-大安區',
		'geo_img' : '/img/locations/da_an_district.jpg'
	}, {
		'geo_location' : [ 25.028561, 121.570725 ],
		'geo_description' : '台北-信義區',
		'geo_img' : '/img/locations/xin_yi_district.jpg'
	}, {
		'geo_location' : [ 25.060909, 121.550641 ],
		'geo_description' : '台北-松山區',
		'geo_img' : '/img/locations/shung_shang_district.jpg'
	}, {
		'geo_location' : [ 25.048104, 121.517033 ],
		'geo_description' : '終點-台北車站',
		'geo_img' : '/img/locations/taipei_station.jpg'
	} ];
	// end of temporary geo-info

	//iterate array to retrieve info.
	var descriptions = [], locations = [], imgs = [];
	$.each(geo_info, function(ith, elem) {
		locations.push(elem['geo_location']);
		descriptions.push(elem['geo_description']);
		imgs.push(elem['geo_img']);

	});

	//set route lines
	var routeLines = [ L.polyline(locations) ], markers = [];

	//init map
	map = L.map('map_kp_journey', {
		minZoom : config.minZoom,
		maxZoom : config.maxZoom,
		zoomControl : false,
		dragging : true,
		zoom : config.initZoom,
		center : config.initLatLng,
		layers : grayscale,
		attributionControl : false

	});

	//add tileUrl
	// map.addLayer(new L.TileLayer(config.tileUrl));

	// defualt location of popup
	var popup, circle, marker, polyline;
	var is_start = false;
	
	function do_animation() {
		// init popup and location circle
		circle = L
				.circle([ 25.048104, 121.517033 ], 10, {
					color : '#f00',
					fillColor : '#f05',
					fillOpacity : 0.8
				})
				.bindPopup(
						'<img alt="taipei_station" src="/img/locations/taipei_station.jpg" style="width: 200px;"><p style="color:#000;">柯P行腳- 台北車站</p>',
						{
							keepInView : true
						}).addTo(map);

		// iterate LatLng array
		$.each(routeLines,
					function(i, routeLine) {
							marker = L.animatedMarker(
											routeLine.getLatLngs(),
											{
												icon : my_icon,
												autoStart : false,
												distance : 180, // meters
												interval : 1000, // milliseconds
												geo_descriptions : descriptions, // locations
																					// descriptions
												geo_imgs : imgs,
												onEnd : function() {
													// remove marker icon
													/*
													 * $(this._shadow).fadeOut(100);
													 * $(this._icon).fadeOut(1000,
													 * function() {
													 * map.removeLayer(this);
													 * });
													 */

													// bind popup message on
													// marker
													this
															.bindPopup(
																	'<iframe width="300" height="169" src="//www.youtube.com/embed/fkOKYjBB90k?autoplay=1" frameborder="0" allowfullscreen></iframe><p style="color: #000;">'
																			+ '真・柯文哲: 一張躺椅'
																			+ '</p>',
																	{
																		keepInView : true
																	}).addTo(
																	map)
															.openPopup();

													// inifite animation
													// setTimeout(restart_animation(),
													// 500);
												}
											});

							// add marker on map and push it into array
							marker
									.bindPopup(
											'<img alt="taipei_station" src="/img/kp_attitute.jpg" style="width: 280px;"><p style="color: #000;"><span style="color: #ff2005; font-weight: bold; font-size: 13px;">MA<span style="color: #ee8c00; font-weight: 100;">柯</span>P</span> (請按地圖開始動畫)</p><p style="color: #000; letter-spacing: 1px;">目前動畫資料為Demo用，希望未來能改版成聯繫到柯P真實的行腳記錄</p>',
											{
												keepInView : true
											}).addTo(map).openPopup();
							map.addLayer(marker);
							markers.push(marker);

							// click event is fired up while clicking map; restart_animation() not used for current project
							map.on('click', function(e) {
								if (!is_start) {
									marker.start();
									is_start = !is_start;
								}
							});
						});
	}

	// restart animation
	function restart_animation() {
		clearMap(map);

		// apply promise to this animation
		do_animation();
		if (typeof marker !== undefined) {
			marker.start();
		}
	}

	// clear layers on map
	function clearMap(m) {
		//remove layers
		for (i in m._layers) {
			if (m._layers[i]._path != undefined) {
				try {
					m.removeLayer(m._layers[i]);
				} catch (e) {
					console.log("problem with " + e + m._layers[i]);
				}
			}
		}
	}

	// start animation after 500 mil-sec
	do_animation();
	/* end of animation */
}());
// end of show map
