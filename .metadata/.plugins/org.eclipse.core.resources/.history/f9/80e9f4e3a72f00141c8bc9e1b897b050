{% extends "/base/base.html"%}

<!-- css block -->
{% block css_content %}
<style>
.axis path,.axis line {
	fill: none;
	stroke: #000;
	shape-rendering: crispEdges;
}

.line {
	fill: none;
	stroke: steelblue;
	stroke-width: 1.5px;
}
</style>
{% endblock %}

<!-- js block -->
{% block js_content %}
<script type="text/javascript" src="/js/d3.js"></script>
{% endblock %} {% block main_content %}
<div id="line-chart-container">

	<div id="brief_information"
		style="visibility: hidden; margin: 10px auto;">
		<span id="percentage"></span>
	</div>

</div>

<!-- js -->
<script type="text/javascript">
<!--
	var margin = {
		top : 20,
		right : 20,
		bottom : 30,
		left : 50
	}, width = 960 - margin.left - margin.right, height = 500 - margin.top
			- margin.bottom;

	var parseDate = d3.time.format("%d-%b-%y").parse;

	var x = d3.time.scale().range([ 0, width ]);

	var y = d3.scale.linear().range([ height, 0 ]);

	var xAxis = d3.svg.axis().scale(x).orient("bottom");

	var yAxis = d3.svg.axis().scale(y).orient("left");

	var line = d3.svg.line().x(function(d) {
		return x(d.date);
	}).y(function(d) {
		return y(d.close);
	});

	var svg = d3.select("div#line-chart-container").append("svg").attr("width",
			width + margin.left + margin.right).attr("height",
			height + margin.top + margin.bottom).append("g").attr("transform",
			"translate(" + margin.left + "," + margin.top + ")");

	d3.tsv("/mis/data.tsv", function(error, data) {
		console.log(JSON.stringify(data, 2, 2));
		data.forEach(function(d) {
			d.date = parseDate(d.date);
			d.close = +d.close;
		});

		x.domain(d3.extent(data, function(d) {
			return d.date;
		}));
		y.domain(d3.extent(data, function(d) {
			return d.close;
		}));

		svg.append("g").attr("class", "x axis").attr("transform",
				"translate(0," + height + ")").call(xAxis);

		svg.append("g").attr("class", "y axis").call(yAxis).append("text")
				.attr("transform", "rotate(-90)").attr("y", 6).attr("dy",
						".71em").style("text-anchor", "end").text("Price ($)");

		svg.append("path").datum(data).attr("class", "line").attr("d", line).on("mouseover", mouseover).on("mouseleave", mouseleave);
	});

	function mouseover(d, i) {

		// calculate percentage
		//var percentage = (100 * d.value / totalSize).toPrecision(3);
		/* var percentageString = '此群組(Group-' + (i + 1) + ')比例: ' + percentage
				+ "%"; // build brief information string */
		var percentageString = '此群組(Group-' + (i + 1) + ')比例: '

		//if percentage is kind of too small, just show the percentage is smaller than 0.1%
		if (percentage < 0.1) {
			percentageString = "< 0.1%";
		}

		// select element and add brief information on Text
		d3.select("#percentage").text(percentageString);

		// show brief information
		d3.select("#brief_information").style("visibility", "visible");

		// fade all the segments.
		var selected_val = d.value;
		d3.select(this).style("opacity", 0.3);

	}

	// Restore everything to full opacity when moving off the visualization.
	function mouseleave(d) {
		// Transition each segment to full opacity and then reactivate it.
		d3.select(this).transition().duration(500).style("opacity", 1);

		// hide brief information
		d3.select("#brief_information").style("visibility", "hidden");
	}
//-->
</script>
{% endblock %}
