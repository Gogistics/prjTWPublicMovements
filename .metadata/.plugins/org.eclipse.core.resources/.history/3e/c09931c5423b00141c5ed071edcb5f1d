{% extends "/base/base.html"%}

<!-- css block -->
{% block css_content %}
<style>
body {
	font: 10px sans-serif;
}

.axis path,.axis line {
	fill: none;
	stroke: #000;
	shape-rendering: crispEdges;
}

.bar {
	fill: steelblue;
	-webkit-transition: opacity .5s ease-in-out;
    transition: opacity .5s ease-in-out;
}

.bar:hover {
	opacity: 0.5;
}


.x.axis path {
	display: none;
}


/* d3 tips */
.d3-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(255, 255, 255, 0.8);
  color: #000;
  border-radius: 3px;
  border: rgba(100,100,100,0.95);
}

/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: rgba(0, 0, 0, 0.8);
  content: "\25BC";
  position: absolute;
  text-align: center;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}
</style>
{% endblock %}

<!-- js block -->
{% block js_content %}
<script type="text/javascript" src="/js/d3.js"></script>
<script type="text/javascript" src="/js/d3_tips.js"></script>
{% endblock %} {% block main_content %}
<div id="financial_bars-chart-container"></div>

<!-- js -->
<script type="text/javascript">
	var margin = {
		top : 20,
		right : 20,
		bottom : 30,
		left : 40
	}, width = 960 - margin.left - margin.right, height = 500 - margin.top
			- margin.bottom;

	var x0 = d3.scale.ordinal().rangeRoundBands([ 0, width ], .1);

	var x1 = d3.scale.ordinal();

	var y = d3.scale.linear().range([ height, 0 ]);

	var color = d3.scale.ordinal().range(
			[ "#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c",
					"#ff8c00" ]);

	var xAxis = d3.svg.axis().scale(x0).orient("bottom");

	var yAxis = d3.svg.axis().scale(y).orient("left").tickFormat(
			d3.format(".2s"));

	var svg = d3.select("body").append("svg").attr("width",
			width + margin.left + margin.right).attr("height",
			height + margin.top + margin.bottom).append("g").attr("transform",
			"translate(" + margin.left + "," + margin.top + ")");
	
	var tip = d3.tip()
	  .attr('class', 'd3-tip')
	  .offset([-10, 0])
	  .html(function(d) {
	    return "<strong>Population-"+ + d.name + +"</strong><span style='color:red'>" + d.value + "</span>";
	  });

	d3.csv("/mis/data.csv",
			function(error, data) {
		console.log(JSON.stringify(data,2,2));
				var ageNames = d3.keys(data[0]).filter(function(key) {
					return key !== "State";
				});

				data.forEach(function(d) {
					d.ages = ageNames.map(function(name) {
						return {
							name : name,
							value : +d[name]
						};
					});
				});

				x0.domain(data.map(function(d) {
					return d.State;
				}));
				x1.domain(ageNames).rangeRoundBands([ 0, x0.rangeBand() ]);
				y.domain([ 0, d3.max(data, function(d) {
					return d3.max(d.ages, function(d) {
						return d.value;
					});
				}) ]);

				svg.append("g").attr("class", "x axis").attr("transform",
						"translate(0," + height + ")").call(xAxis);

				svg.append("g").attr("class", "y axis").call(yAxis).append(
						"text").attr("transform", "rotate(-90)").attr("y", 6)
						.attr("dy", ".71em").style("text-anchor", "end").text(
								"Population");

				var state = svg.selectAll(".state").data(data).enter().append(
						"g").attr("class", "g").attr("transform", function(d) {
					return "translate(" + x0(d.State) + ",0)";
				});

				state.selectAll("rect").data(function(d) {
					return d.ages;
				}).enter().append("rect").attr("width", x1.rangeBand()).attr(
						"x", function(d) {
							return x1(d.name);
						}).attr("y", function(d) {
					return y(d.value);
				}).attr("height", function(d) {
					return height - y(d.value);
				}).style("fill", function(d) {
					return color(d.name);
				}).on('mouseover', tip.show).on('mouseout', tip.hide);

				var legend = svg.selectAll(".legend").data(
						ageNames.slice().reverse()).enter().append("g").attr(
						"class", "legend").attr("transform", function(d, i) {
					return "translate(0," + i * 20 + ")";
				});

				legend.append("rect").attr("x", width - 18).attr("width", 18)
						.attr("height", 18).style("fill", color);

				legend.append("text").attr("x", width - 24).attr("y", 9).attr(
						"dy", ".35em").style("text-anchor", "end").text(
						function(d) {
							return d;
						});
				
				// apply tips
				svg.call(tip);

			});
</script>
{% endblock %}
