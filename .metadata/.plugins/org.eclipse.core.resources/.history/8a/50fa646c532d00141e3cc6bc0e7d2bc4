# -*- coding: utf-8 -*-
'''
Created on Jun 24, 2014

@author: Alan Tai
'''
from models.models_geo_info import NewAlbumGeoInfo
__author__ = 'Alan Tai'


import logging
import jinja2
import webapp2

from dictionaries.dict_keys_values import KeysVaulesGeneral
from dictionaries.dict_html_pages_reference import HtmlPagesReference
from handlers.handler_webapp2_extra_auth import BaseHandler

# dictionaries
dict_general = KeysVaulesGeneral()
dict_html_ref = 


# jinja environment
jinja_environment = jinja2.Environment(loader=jinja2.FileSystemLoader('static/templates'))

# dispatchers
class BaseDispatcher(BaseHandler):
    def get(self):
        """ front page dispatcher """
        template_values = {}
        template_values.update({'title':u'柯文哲-MA柯P'})
        self.render_template('/base/front_page.html', template_values)

class ArticlesDispatcher(BaseHandler):
    def get(self):
        """ videos dispatcher """
        template_values = {}
        template_values.update({'title':u'柯文哲-柯"文"集'})
        self.render_template('/base/articles.html', template_values)
        
class AlbumsDispatcher(BaseHandler):
    def get(self):
        """ albums dispatcher collect the albums geo info and send to front-end """
        template_values = {}
        albums_geo_info = NewAlbumGeoInfo.query()
        
        #check if query is empty
        if albums_geo_info.count() <= 0:
            albums_geo_info = None
        
        template_values.update({'title':u'柯文哲照片集', 'albums_geo_info': albums_geo_info})
        self.render_template('/base/albums.html', template_values)
        
class VideosDispatcher(BaseHandler):
    def get(self):
        """ videos dispatcher """
        template_values = {}
        template_values.update({'title':u'柯文哲影像集'})
        self.render_template('/base/videos.html', template_values)

# configuration
config = dict_general.config_setting

# app
app = webapp2.WSGIApplication([
    webapp2.Route(r'/', BaseDispatcher, name='front_page'),
    webapp2.Route(r'/base/articles', ArticlesDispatcher, name='articles'),
    webapp2.Route(r'/base/albums', AlbumsDispatcher, name='albums'),
    webapp2.Route(r'/base/videos', VideosDispatcher, name='videos')
], debug=True, config=config)

# log
logging.getLogger().setLevel(logging.DEBUG) 
    
