need
eta
dispatches
using
dispatching
Starts
passed
particular
pop
its
background_request_id
SERVER_NAME
dispatcher
_module_name_to_default_versions
time
Raises
event
thread
copy
these
__repr__
host
cls
under
urllib
number
send_background_request
calls
get_module_names
variables
content
__init__
requested
system
dispatched
unset
load
bin
tuples
Provides
_asdict
Scheduled
owns
itemgetter
unique
A
events
use
run
instances
running
handling
continuation
add_request
module_names
Apache
The
Allows
map
usr
g
NotSupportedWithAutoScalingError
get_request_url
may
d
e
keys
needs
a
_module_names
Inc
BackgroundThreadLimitReachedError
operator
field
either
new
arguments
seconds
r
string
background
doc
classmethod
Unless
methods
to
body
both
HTTP
change
distributed
URLs
apache
by
localhost
add_async_request
Stops
get_instance
_LocalFakeDispatcher
software
invalid
optional
permissions
Add
Version
instance
iterable
key
be
agreed
AS
get
Gets
automatic
Certain
hostname
get_module
__slots__
url
PATH_INFO
that
scheduled
QUERY_STRING
str
names
serving
containing
require
module_name
identifier
got
update
does
valid
Exception
result
_local_dispatcher
can
generate
Update
set
governing
about
www
Otherwise
Returns
response
KeyError
channel_stub
name
implied
An
dispatch
ResponseTuple
KIND
triggered
law
InvalidInstanceIdError
You
modules_stub
at
_replace
you
Sets
See
Error
expecting
_module_name_to_versions
which
source
Alias
an
Lookup
service
add_event
provided
Google
VersionAlreadyStoppedError
tuple
foo
get_request_environ
get_versions
lookup
of
operation
are
runnable
_make
opaque
file
_fields
only
on
_local_request_info
get_num_instances
information
os
__dict__
scaling
obtain
baz
Implemented
start_version
http
stopped
asynchronously
will
_module_name_to_version_to_hostname
auto
taskqueue_stub
language
bar
port
query
Expected
Request
express
org
ValueError
This
WITHOUT
WSGI
according
version
unexpected
tests
source_ip
supported
CONDITIONS
OF
Copyright
capacity
fake
URL
Dispatcher
module
SERVER_PORT
get_version
ModuleDoesNotExistError
Dispatch
env
already
len
access
should
OR
request_id
specified
License
balancing
method
within
RequestInfo
capabilities
warning
set_num_instances
headers
stop_version
user_service_stub
since
compliance
where
get_hostname
python
LICENSE
requests
Process
when
request
value
ID
required
VersionDoesNotExistError
linked
VersionAlreadyStartedError
instance_id
_LocalRequestInfo
status
int
environ
Other
IS
logging
property
NotImplementedError
__new__
__getnewargs__
HTTP_HOST
WARRANTIES
TypeError
environment
default
usable
representation
subclass
relative_url
If
this
call
stubs
dict
specific
state
event_id
limitations
writing
Got
licenses
object
module_name_to_version_to_hostname
applicable
It
super
id
module_name_to_default_versions
API
Args
callable
quote
able
path
Licensed
kwds
making
module_name_to_versions
exist
zip
it
ANY
get_default_version
epoch
list
the
know
BASIS
Not
ip
versions
address
implementation
update_event
get_dispatcher
uses
started
modules
