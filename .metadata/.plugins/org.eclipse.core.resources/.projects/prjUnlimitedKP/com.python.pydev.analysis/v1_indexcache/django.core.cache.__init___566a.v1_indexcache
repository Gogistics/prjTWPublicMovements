need
cleanup
greater
backends
qpos
etc
particular
pop
its
CacheKeyWarning
DummyCache
defaults
scheme
AttributeError
copy
urlparse
defined
host
getattr
engine
To
mod
dotted
differentiate
ImportError
available
locmem
When
filebased
defines
explicit
load
dummy
split
TIMEOUT
we
compatibility
BACKEND
simple
made
deprecation
use
Works
conf
The
do
parse
import_module
warnings
notation
Client
g
deprecated
define
may
e
keys
Function
a
up
LOCATION
either
new
including
t
s
conform
backend
string
mod_python
base
importlib
public
configuration
variable
Helper
arbitrary
to
nutshell
raises
CACHE_BACKEND
args
docs
settings
backend_cls
by
dynamically
identified
must
has
close
who
takes
values
any
instance
be
db
get
so
code
parse_backend_uri
that
mod_path
LocMemCache
case
restored
rsplit
named
update
connect
MemcachedCache
can
set
Returns
kwargs
setting
style
get_cache
complete
name
Mapping
all
cls_name
You
backwards
at
provides
See
__all__
topics
which
see
py
pre
an
provided
parse_backend_conf
core
Some
tuple
package
CacheClass
PendingDeprecationWarning
of
caches
are
given
file
on
startswith
information
legacy_backend
extra
Caching
flexible
DeprecationWarning
start
global_settings
DEFAULT_CACHE_ALIAS
Backend
different
DatabaseCache
put
InvalidCacheBackendError
django
ValueError
This
version
exceptions
CACHE_
BaseCache
api
CACHES
backend_uri
end
options
URI
completed
module
cases
cache
dictionary
access
framework
should
hasattr
directory
method
based
design
Couldn
old
but
Try
location
endswith
Could
Converts
function
python
memcached
doesn
more
cgi
request
value
returns
directly
required
custom
cycle
wire
here
signals
default
FileBasedCache
ImproperlyConfigured
BACKENDS
rest
If
Trying
this
util
efficient
warn
Any
dict
In
allow
request_finished
object
pickled
txt
API
backend_classes
path
For
treated
Python
parse_qsl
find
between
importing
abstract
it
into
the
params
Name
utils
entry
instead
first
user
