using
Model
handle
holding
otherwise
pop
Module
of
value_to_string
Convert
pre_save
fail
given
file
Init
only
on
along
start_object
Basically
fully
__repr__
deserialization
defined
ends
serialize
getattr
basestring
possibly
prevent
available
bad
calls
selected_fields
non
many
models
loaded
__init__
happened
touch
isinstance
queryset
container
serialization
saving
__iter__
each
serializing
pk
might
stream
google
A
Iteration
serializer
before
next
data
django
use
handle_fk_field
Django
This
ensures
iterface
The
serialized
twice
app_label
bypasses
encoding
internal
options
just
classes
start_serialization
post
Deserializer
a
end_serialization
implemented
local_fields
field
datetime_safe
starts
s
m2m
what
item
string
base
relational
Serialize
obj
rel
handle_field
Abstract
methods
to
accessor_name
literally
second
save
individual
by
DeserializedObject
been
smart_unicode
friends
hack
get_string_value
ManyToManyField
stream_or_string
any
when
seekable
Something
value
DeserializationError
directly
be
forced
sure
fields
db
Call
saved
use_natural_keys
NotImplementedError
object_list
deserializer
unserializer
ForeignKey
that
processed
stuff
items
subclass
Return
internal_use_only
deserialized
output
make
this
raw
call
Exception
model
save_base
setattr
have
many_to_many
Called
object
handle_m2m_field
StringIO
get_apps
during
callable
_meta
attname
baseclass
accidental
get_model
m2m_data
all
getvalue
Indicates
abstract
came
the
end_object
database
SerializationError
appengine
save_m2m
utils
smart_str
pre
an
object_name
Serializer
also
_internal
