periods
nested
coded
float
Raises
time
created
AttributeError
ReadOptions
__commit_hook
is_pending
objects
right
these
basestring
base_req
Subclasses
possibly
DeleteRequest
Defaults
__SUPPORTED_VERSIONS
few
Do
App
mutable_transaction
Used
unset
bin
each
tuples
max_entity_groups_per_rpc
exception_class
unique
A
_app
made
Finish
N
debug
usually
_
to_ref
member
classes
discouraged
define
g
d
formally
e
mimics
b
c
keys
datastore_pbs
__adapter
a
n
join
Options
max_size
i
clear_key
new
t
s
r
sequence
__rollback_hook
base
pb_to_key
library
testing
req
public
y
Helper
strongly
x
libraries
_configs
transactions
VoidProto
lazily
client
BadArgumentError
exception
entity
settings
distributed
Instances
current_get_response
apache
enumerate
pausing
has
software
invalid
priority
permissions
is_configuration
delete_list
derived
entity_v4_pb
primarily
hook
AS
append
involves
_create_rpc
unsupported
positional_wrapper
code
_generate_pb_lists
preferred
__slots__
__get_hook
_set_request_transaction
Sends
pbs
names
Application
Reference
make
large
update
__get_max_entity_groups_per_rpc
__get_indexes_hook
_api_version
pb_to_entity
through
datastore_errors
response
_DatastoreExceptionFromErrorCodeAndDetail
possible
Its
following
async_rollback
especially
name
An
implied
on_configuration
tries
deferred_resp
NOTES
wrapped_rpc
law
Transaction
async_begin_transaction
unrelated
equal
finished
assertion
_cls
Error
itervalues
__all__
neither
key_to_pb
never
which
take
ConfigOptions
there
mutable_read_options
zero_ok
attributes
set_max
Whether
_MergedConfiguration
accessed
jobs
otherwise
__set__
make_put_call
rpc
AllocateIdsRequest
given
grouped_values
plural_s
empty
Currently
itself
reported
element
final
consequences
support
interpertation
AllocateIds
incr_size
bad
IdentityAdapter
prone
reorders
http
IDs
abstraction
performed
will
begin_transaction
querying
_StubRpc
entity_list
LookupResponse
explicitly
build
express
clear
allocate_ids
normally
unless
supported
OF
rather
reserve_key_ids
construction
EntityProto
held
defining
allocate_list
OR
hasattr
positional
reserves
conflicting
create_rpc
__getattr__
WARNING
implements
translate
config_option
method
force
patch
pb_to_index
follows
apply
integers
single
mutations
tends
marks
indexed_entities_by_entity_group
contains
since
every
type
where
related
Supports
python
BeginTransactionResponse
inherits
max_allocate_ids_keys
rare
exact
request
ID
none
useful
required
argument
consist
easier
insert_auto_id_list
means
designated
here
IS
apiproxy_rpc
requires
timeouts
strong
async_put
locks
UserRPC
v3_entity
If
root_idkey
Configure
Optional
_add_pending
In
Either
Database
writing
rollback
It
_async_reserve_keys
Synchronous
super
read_policy
APIs
CommitRequest
allows
corresponding
path
below
NotImplemented
zip
added
validation
your
_ToDatastoreError
into
transactionally
adapter
interface
database
set_force
implementation
consistent
also
timeout
get_response
Expand
Unknown
pop
its
checks
omitted
production
validate
v4_entity
exactly
concurrent
on_completion
elements
copy
__repr__
cls
waiting
To
under
consistency
reference_pb
always
calls
entities
variables
exc_info
__init__
system
Class
specify
low
apiproxy_errors
deadline
conn
fails
use
RPCs
run
Clear
has_entity
Apache
designed
RUNNING
check_success
_DATASTORE_V3
immutable
_DATASTORE_V4
key_to_pb_v4
usr
collections
exposes
_ConfigurationMetaClass
transactional
builds
__reserve_keys_hook
UNKNOWN_DATASTORE
allocate
supplied
CapabilityDisabledError
either
arguments
original
retries
world
arbitrary
progress
wait_any
v4_to_v3_reference
has_transaction
implicit
repeatedly
perform
deferred_rpc
datastore
comprises
must
BIGTABLE_ERROR
values
set_app
understood
Add
__put_hook
Internal
StringProto
Set
iterable
make_delete_call
agreed
successes
Gets
max_egs_per_rpc
indexes
deprecated_mutation
rpc4
rpc3
BadRequestError
datastore_pb
rpc2
rpc1
indexed_keys_by_entity_group
difference
whereas
api_base_pb
add_reserve
STRONG_CONSISTENCY
case
sorts
succeeded
attempt
valid
Exception
datastore_v4_pb
IDLE
can
governing
www
invoked
kwargs
So
__v4_put_allocate_ids_hook
Example
performance
functools
multiple
protocol
helper
__v4_delete_hook
__name__
sorted
you
Configuration
See
anything
originally
async_get
err
has_key
tuple
ties
error_detail
specially
zero
defaultdict
MAX_ALLOCATE_IDS_KEYS
calculated
After
info
avoid
allocated_list
accepted
represented
set_value
key_value
__extra_hook
get_group
pairs
extra
decorator
Put
BeginTransactionRequest
deprecated_mutation_result
__dict__
deferred_req
non
__transaction
many
nor
positional_decorator
start
some
Use
frozenset
unavailability
bytes
protobufs
put
range
remove
indexed
in_order
validator
v3_ref
mapping
Transactions
This
datastore_db
exceptions
serialized
pbsgen
make_rpc_call
delete
Copyright
reversed
conversions
entity_group
end
options
__config
_PROPAGATION
module
applying
overrides
cases
already
env
len
stored
wait_for_all_pending_rpcs
process
really
set_failover_ms
rpcs
keys_from_request
License
successfully
txn_class
lowest
Rollback
Abstract
allowed
but
send
v4_req
transaction
ApplicationError
get_result_hook
adds
allocated
PutRequest
GetResponse
All
Converts
used
v4_entities
UserRPCs
been
Java
namespace
function
LICENSE
_make_rpc_call
result_dict
immutability
connection
CommitResponse
stronger
set_read_consistency
NotImplementedError
logging
__v4_build_put_result
CopyFrom
RollbackRequest
__new__
AllocateIdsResponse
pb_v4_to_key
async_commit
representation
batch
to_id_key
policy
_get_transaction
match
agnostic
known
output
refactoring
generic
Instance
call
Any
issue
redundant
state
attribute
currently
sqlite
user_data
API
another
flatten
details
extracts
MAX_DELETE_KEYS
Python
max_pos_args
NESTED
ANY
check
keyword
merges
_map_and_group
begin
around
set_cross_group
appengine
__sort_result_index_pairs
Using
maps
relevent
Syncnronous
__is_stronger
base_size
instead
special
started
group
their
first
user
merged
group_fn
using
map_fn
store
fish
higher
supports
hashable_key
wait
failing
until
over
v4_keys
upsert_list
ConfigOption
thread
propagation
But
something
Nothing
once
__delete_hook
Reserved
optimization
number
subclasses
apiproxy_stub_map
Cannot
Index
isinstance
explicit
__transaction_rpc
TIMEOUT
consisting
TransactionFailedError
typically
before
user_
metaclass
get_results
__result
AbstractAdapter
faster
__pending_v4_deletes
Create
map
current
write
Merge
do
checking
v4_resp
safe
TransactionalConnection
may
casing
max
entity_pb
integer
needs
converted
Inc
traditional
blocks
represent
current_app
RPC
pb_to_query_result
nothing
Get
configuration
classmethod
returned
Unless
MultiRpcs
yet
methods
get_pending_rpcs
__finished
constructed
least
args
ALLOWED
BaseConnection
CONCURRENT_TRANSACTION
by
splitting
same
long
_options
would
propagate
optional
Transactional
any
__hash__
__getstate__
key
be
db
_MAX_ID_BATCH_SIZE
get
likely
v3_to_v4_key
set_transaction
_values
forces
__pending_rpcs
setdefault
reconized
provinging
get_indexes
maximum
containing
Return
queries
force_writes
example
Multiple
issubclass
stale
thing
Entity
does
ignored
instantiate
set
clear_read_consistency
existing
__pending_v4_upserts
GetRequest
Returns
ValidateInteger
dev_appserver
throw
Iterable
waits
generally
types
KIND
all
wraps
element_size
num_groups
read_options
idx
You
yields
ids
makes
backwards
at
Always
_reserve_keys
v4_to_v3_entity
v4_allocated_keys
GetIndices
max_groups
see
an
Lookup
manages
they
max_delete_keys
no
CAPABILITY_DISABLED
implementations
TransactionOptions
impose
inclusive
CompositeIndices
modifying
of
operation
pending
on
only
Except
decorated
__mro__
entity_to_pb
creating
keys_only
_MultiRpc__rpcs
done
classname
guaranteed
include
entities_from_request
committed
pb
them
then
enumeration
__allocate_ids_hook
small
insert_auto_id_key
caller
different
lo
raised
__call__
development
descriptor
merge
constraint
most
async_delete
across
WITHOUT
Engine
completes
remaining
async_get_indexes
async_allocate_ids
CONDITIONS
ReferenceToKeyValue
_positional
completed
similar
Specifically
_quick_merge
true
Datastore
Keys
External
specified
additional
Immutable
_is_configuration
inconsistent
callback
Wait
obj
specifies
within
retry
insert
Timeout
second
location
Builds
being
make_call
NEED_INDEX
set_size
subtle
INDEPENDENT
ValidateString
buffer
level
partition
more
results
grouped
when
wait_all
set_allow_multiple_eg
value
MAX_RPC_BYTES
sets
Setting
Delete
returning
keys_by_idkey
__add_get_response_entities_to_dict
objtype
appropriate
premise
such
int
issued
flat
controlled
Other
unchanged
datastore_v3
_set_request_read_policy
copies
datastore_v4
flag
representing
called
executing
LookupRequest
thin
commonly
this
RollbackResponse
stubs
concept
equivalent
hooks
becomes
limitations
runtime
max_put_entities
hi
add
applicable
includes
sends
was
PEP
id
real
__ne__
txn
Can
Asynchronous
May
read
__begin_transaction_hook
deepcopy
various
Remove
pb_indexes
between
less
constructor
abstract
those
application
it
important
extend
Tries
max_rpc_bytes
entity_result
list
intent
configs
two
removes
removed
merging
DEFAULT_MAX_ENTITY_GROUPS_PER_RPC
found
indexed_pb
new_entity_pb
These
greater
Key
handle
passed
determines
lengthString
received
optimal
strange
defaults
set_mode
asynchronous
__get__
xg
EVENTUAL
__setstate__
option
defined
Commit
getattr
There
iteritems
Exactly
__class__
DatastoreServiceConfig
When
declare
defines
Because
coming
conflict
assumed
we
is_complete_v4_key
specifying
Higher
data
date
running
v3_to_v4_entity
The
datastore_types
max_count
get_entity_converter
debugging
hard
__eq__
max_get_keys
query_options
Turn
_extract_entity_group
implemented
Note
__metaclass__
PutResponse
eventually
cannot
up
combined
field
replace
APPLY_ALL_JOBS_CONSISTENCY
backend
seconds
string
_classes
variable
NeedIndexError
keep
wrapping
to
detail
check_rpc_success
indexed_key_groups
both
provide
raises
inner
v4
v3
index_list
handled
after
takes
get_result
indexed_pbs
commit
MANDATORY
get_datastore_type
extra_hook
make_get_call
taken
Invalid
connections
parameters
instance
Version
index
new_transaction
BAD_REQUEST
so
Call
NOTE
providing
intended
result_index_pairs
logic
size
that
finish
input
str
associated
More
than
due
v4_key
MultiRpc
__rpcs
NON_TRANSACTIONAL
result
model
HIGH_REPLICATION_DATASTORE
about
incomplete
hand
KeyError
complete
COMMITTED_BUT_STILL_APPLYING
allocation
compatible
Here
implement
rebuild
ancestor
new_key_pb
top
found_list
functions
separate
pb_v4_to_entity
track
expanding
provides
needed
elem
set_allow_deferred
py
service
determined
provided
server
operations
Google
success
handles
out
costly
Repeatedly
via
BeginTransaction
wrapped
test
accept
app_identity
bases
applies
whether
InternalError
filled
__force
arg
are
classDict
wrapper
file
config
_ParseFullAppId
groups
awkward
_GetDatastoreType
prevent
interaction
create
without
concrete
set_strong
obtain
inputs
ResolveAppId
flesh
experimentation
flattened
reserve
FINISHING
application_error
language
ask
cross
Make
google
entity_to_pb_v4
pair
encouraged
query
failed
key_list
Expected
MASTER_SLAVE_DATASTORE
org
kind
version
Deprecated
identity
api
One
giving
want
min
app
stub
apiproxy
figures
mutable_model_key
create_result_index_pairs
should
relational
MAX_PUT_ENTITIES
Constructor
_remove_pending
based
old
users
appended
_end_transaction
overridden
EVENTUAL_CONSISTENCY
service_name
compliance
sort_result_index_pairs
requests
were
returns
positive
succeed
BaseConfiguration
hash
expressed
path_element
throws
property
protobuf
sense
ALL_READ_POLICIES
WARRANTIES
TypeError
MAX_GET_KEYS
default
__create_result_index_pairs
DeleteResponse
subclass
even
passing
hasn
resp
dict
deferred_list
other
allow
specific
have
aggressively
one
licenses
object
CommittedButStillApplying
Connection
Args
order
INTERNAL_ERROR
mutable_deprecated_mutation
Licensed
kwds
For
How
lists
find
CompositeIndex
Check
error
ByteSize
Yields
nearly
refers
the
BASIS
rules
batching
entry
applied
context
configurations
bool
is_read_current
