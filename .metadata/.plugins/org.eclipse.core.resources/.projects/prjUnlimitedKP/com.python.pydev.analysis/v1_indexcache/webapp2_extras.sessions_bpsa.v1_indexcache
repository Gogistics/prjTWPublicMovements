need
using
load_config
backends
store
creates
until
Path
time
HomeHandler
unguessable
something
secret_key
BaseSessionFactory
serialize
$
basestring
HMAC
webapp2_extras
isinstance
App
Used
SecureCookieSessionFactory
get_backend
unique
A
_default_value
lasts
current
domain
do
cookies
classes
g
sid
define
_flash
max
e
_sid_re
keys
a
Response
ones
Options
w
register
new
t
s
r
subdomain
exists
base
_get_session_container
Get
configuration
returned
yet
client
visible
SecureCookieSerializer
_get_new_sid
args
exception
by
long
same
has
optional
httponly
key
be
append
get
__slots__
preferred
setdefault
maximum
active
factory
_get_by_sid
update
securecookie
Keyword
set
tipfy
MemcacheSessionFactory
through
Returns
__delitem__
forged
sessions_memcache
mydomain
response
name
An
Initializes
all
HTTPS
By
ids
at
Sets
oncall
main
message
which
Disallow
see
retrieve
an
inside
Serializer
Saves
BaseHandler
configured
entropy
of
correct
given
convenience
empty
on
only
itself
support
flexible
session
them
will
bar
sessions_ndb
Backend
different
get_flashes
raised
ll
preceding
build
Engine
clear
cached_property
subdomains
user_values
calls_update
closed
sessions
my
Keys
on_update
default_values
accross
method
warning
single
save
second
default_config
level
when
age
request
value
webapp
required
kw
argument
extends
Maximum
means
Other
Must
set_secure_cookie
Saving
If
this
security
It
super
id
Flash
path
read
Secure
importing
application
it
list
_registry_key
duration
_sid
get_store
get_request
cookie_args
set_store
Cookie
Key
passed
pop
dot
validate
import_string
Lightweight
signature
cookie_name
copy
memcache
defined
Domain
getattr
expiration
contents
modifications
To
WSGIApplication
available
copyright
CustomBackendSessionFactory
cookie
__init__
defines
Base
param
simple
meth
data
use
messages
timestamp
Available
The
Apache
older
save_secure_cookie
license
From
config_key
utf
alter
invalidate
Sessions
arguments
backend
seconds
checked
coding
to
provide
Limits
datastore
session_args
must
values
webapp2
_is_valid_sid
Set
instance
Value
so
saved
deserializer
modified
deserialize
that
instantiated
than
deserialized
rv
required_keys
valid
generate
can
werkzeug
re
kwargs
KeyError
dispatch
multiple
datastructures
Adds
get_session
__name__
popitem
you
provider
Configuration
See
reference
generate_random_string
needed
authentication
registered
provided
Save
handler
flash
via
foo
are
config
Default
RequestHandler
random
like
add_flash
start
container
registry
Makes
Make
serializer
Tracked
secure
initialized
Request
org
This
serialized
compile
session_max_age
end
_UpdateDictMixin
dicts
just
app
module
signed
Dispatch
dictionary
stored
access
License
stores
based
but
users
overridden
used
__setitem__
function
LICENSE
doesn
save_sessions
returns
custom
work
max_age
NotImplementedError
format
deleted
Only
Secret
default
subclass
even
match
JavaScript
call
dict
set_cookie
Then
Sotware
object
Signed
because
DatastoreSessionFactory
Factories
SessionDict
details
callable
For
won
exist
save_session
Check
session_store
get_secure_cookie
keyword
SessionStore
the
factories
Name
appengine
instead
secret
Don
uses
first
