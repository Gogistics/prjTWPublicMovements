using
passed
Decoding
use_decimal
determines
c_encode_basestring_ascii
its
item_separator
float
validate
Expecting
insertion
allow_nan
AttributeError
feature
place
objects
elements
fp
chunks
defined
cls
serialize
$
To
mod
ImportError
decoded
parse_float
decode
isinstance
simply
nesting
deserializations
load
each
specify
array
compatibility
writelines
complex
C
data
use
instances
The
document
decoding
significant
numbers
Deserialize
could
written
dict_separator
write
decoder
collections
exposes
streaming
g
may
e
b
integer
c
keys
converted
a
n
dumps
o
Note
coercion
l
join
m
utf
j
natively
Specializing
repeated
object_hook
RPC
familiar
u
s
r
string
library
printed
ECMA
py_make_scanner
maintained
Unless
to
edition
hierarchies
OrderedDict
bob
com
provide
raises
encode_basestring_ascii
selects
exception
normal
tool
escaped
__complex__
by
debuggability
long
echo
has
takes
compact
values
interchange
invalid
basic
priority
any
optional
object_pairs_hook
instance
iterable
marshal
make_encoder
key
be
enabled
loads
likely
cost
__version__
that
syntax
str
num_str
than
containing
column
scanstring
iterencode
example
lightweight
Pretty
remember
result
as_complex
decoders
nan
dump
_speedups
can
Encoding
implies
hinting
interpret
getwriter
strings
rd
following
json
parse_int
speedups
performance
name
implement
serializable
types
members
By
precision
advantages
redivi
_import_c_make_encoder
backwards
unicode
at
JSONDecodeError
Notation
reference
__all__
codecs
effect
supporting
ordered
dct
c_scanstring
an
Infinity
scan
kwarg
out
cached
shell
chunk
check_circular
no
tuple
_toggle_speedups
foo
understands
skipkeys
circular
of
repr
equivalents
are
given
accepted
Decimal
file
JSONEncoder
on
only
false
accelerate
formatted
support
JSONDecoder
pairs
OverflowError
separators
like
without
many
earlier
newline
baz
http
container
encode_complex
py_scanstring
then
will
strict
bar
some
_default_encoder
stream
range
explicitly
subject
externally
encountered
most
line
floats
ValueError
org
This
followed
character
version
serialized
dec
encoding
maintains
null
Object
enc
rely
superset
overrides
py_encode_basestring_ascii
JSON
true
should
extension
ASCII
specified
additional
Serialize
method
obj
datatype
simplejson
integers
x08ar
users
but
cause
__author__
char
being
raising
_default_decoder
compliance
every
used
function
python
level
ordered_dict
when
splitlines
value
UTF
func
u1234
scanner
custom
work
kw
spaces
encode
indent
NaN
int
inf
sort_keys
printing
property
ensure_ascii
format
imag
TypeError
default
_import_OrderedDict
representation
pickle
called
subclass
c_make_scanner
even
If
parser
this
JavaScript
parity
equivalent
dict
other
one
c_make_encoder
parse_constant
contained
currently
object
rstrip
It
pretty
subset
another
StringIO
API
real
encodings
order
full
newlines
Bob
read
For
Python
Ippolito
getvalue
encoder
it
check
error
standard
list
the
decimal
rules
io
worse
versions
skipped
Using
specification
instead
make_scanner
Compact
bool
modules
also
literal
