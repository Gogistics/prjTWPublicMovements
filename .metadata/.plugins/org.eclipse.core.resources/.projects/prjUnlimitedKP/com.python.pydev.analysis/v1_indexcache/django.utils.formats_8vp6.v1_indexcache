DATETIME_INPUT_FORMATS
cached
using
numeric
NUMBER_GROUPING
get_format_modules
check_for_language
parts
safestring
float
mark_safe
formats
avoid
of
time
defaults
FORMAT_MODULE_PATH
Decimal
AttributeError
formatted
form
getattr
basestring
decimal_pos
loc
DATE_FORMAT
number
effects
ImportError
get_language
isinstance
Used
format_cache
localize_input
will
THOUSAND_SEPARATOR
split
language
separator
reset_format_cache
_format_modules_cache
translation
numberformat
Checks
localizable
django
purposes
mapping
conf
date
Clear
This
running
according
encoding
current
_
reversed
datetime
strftime
import_module
formatting
g
module
reverse
e
cache
a
USE_THOUSAND_SEPARATOR
join
replace
decimals
field
datetime_safe
s
dateformat
string
time_format
testing
method
force
importlib
to
location
settings
TIME_FORMAT
repeatedly
long
type
Formats
any
value
DECIMAL_SEPARATOR
returns
new_datetime
primarily
be
append
appropriate
localize
format_locations
localization
_format_cache
so
int
decimal_separator
format
heavy
that
setdefault
input
default
get_format
TIME_INPUT_FORMATS
DATETIME_FORMAT
cache_key
locales
If
lifting
sanitize_separators
val
Sanitizes
can
specific
locale
object
Returns
lang
setting
use_l10n
overriding
possible
KeyError
number_format
name
date_format
finding
format_type
For
DATE_INPUT_FORMATS
By
it
unicode
list
the
thousand
to_locale
decimal
iter_format_modules
localized
Does
utils
smart_str
an
USE_L10N
provided
removed
bool
new_date
modules
found
