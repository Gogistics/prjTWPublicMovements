Crosses
backends
from_text
PointOnSurface
supports
OGC
float
spatial_aggregate_sql
created
AsText
Ensuring
SpatiaLiteAdapter
minor1
minor2
Geometry
bounding
objects
basestring
$
Union
number
same_as
gis
Cannot
further
initialization
fallback
isinstance
SpatiaLiteOperator
tuples
Adapter
compatibility
spatialite_version_tuple
F
A
B
SpatiaLiteOperation
handling
transform
P
map
parse
X
f
g
may
d
e
keys
a
m
k
Disjoint
operator
s
what
r
agg
base
library
returned
Helper
yet
Backwards
SpatiaLiteDistance
expression
envelope
exception
POINT
by
long
has
centroid
close
invalid
SpatialOperation
depends
agg_name
geos_version
be
db
execute
packages
DatabaseOperations
AsSVG
column
doing
pattern_regex
queries
GIS
from_wkb
update
does
acceptable
measure
geometries
_value_
Creating
routine
Contains
Returns
completely
srid
area
name
unit_attname
types
AddGeometryColumn
appeared
touches
compiler_module
SQLite
check_aggregate_support
spherical
geodetic
which
take
an
Lookup
MbrWithin
box
GeoDjango
lower
subminor
no
determine
quoting
geom
substitution
crosses
operation
overlaps
of
Overlaps
given
only
on
Aggregate
element
geometry_functions
support
op
calculations
sql_template
row
geometry
Centroid
Retruns
lvalue
then
compliant
will
SELECT
caller
getting
dtypes
Handling
django
spatial_ref_sys
ValueError
distance
bboverlaps
Was
supported
GUnion
spatial
Specifically
Debian
arg_type
true
No
reserved
SymDifference
num_geom
hasattr
SpatiaLiteRelate
Equals
translate
within
db_type
second
Within
contains
point_on_surface
type
valid_aggregates
geo_field
Intersection
exact
value
required
distance_lt
argument
returning
MbrContains
Number
ScaleCoords
int
here
IS
SpatiaLiteFunction
Routines
ImproperlyConfigured
spatial_version
If
this
util
bbcontains
scale
NumGeometries
geo_db_type
was
super
sqlite3
major
as_sql
it
distance_functions
added
alias
your
list
quoted
adapter
fetchone
database
spatialite_version
Geometries
These
passed
geo_col
vtup
dist_func
matches
GeomFromText
NOT
gis_terms
unionagg
template
defined
getattr
Responsibility
__class__
calls
models
Calling
__init__
loaded
Intersects
system
defines
substitue
ShiftCoords
implmented
Provides
we
proj4_version
Checks
Relate
use
convert_geom
The
intersects
procedure
intersection
matrix
implemented
field
either
arguments
pattern
backend
get_geom_placeholder
string
original
sym_difference
relate
to
transform_value
col
Adding
minor
quote_name
terms
substitute
perform
SpatiaLiteFunctionParam
Tuple
tmp
Invalid
parameters
instance
fields
Touches
so
select
Distance
disjoint
msg
difference
that
MbrOverlaps
instantiated
SpatiaLite
get_dist_ops
got
GLength
valid
TF
Exception
result
model
spheroid
distance_gt
re
units_name
kwargs
Transform
DatabaseError
above
conflicts
qn
functions
GEOS
svg
regular
__name__
See
version_regex
settings_dict
sql_function
Extent
core
operations
SpatialFunction
aggregate
via
numeric
cursor
distance_lte
test
tuple
BaseSpatialOperations
Getting
First
lookup
Adaptor
distances
expect
repr
num_points
are
Decimal
Ubuntu
lookup_type
SpatialRefSys
SQL
NAME
equals
distance_gte
like
dist_param
synonyms
sphere
get_distance
GeometryColumns
version
cartesian
exceptions
union
compile
length
_cursor
just
SRID
coordinate
sNULL
placeholder
Envelope
wkt
len
dictionary
stored
should
point
Difference
Length
NumPoints
compiler
contrib
columnas
geometry_columns
spatialite
based
but
cols
Area
PostGIS
Could
substitutions
Converts
used
function
func
proper
OpenGis
connection
PROJ
SpatiaLiteOperations
Incorrect
NotImplementedError
TypeError
Argument
WKT
popular
Valid
match
call
dict
specific
Got
contained
currently
calling
because
another
parameter
isnull
_get_spatialite_func
lookups
operators
For
check
error
GeomFromWKB
keyword
the
degrees
decimal
versions
utils
term
instead
Determine
their
group
user
first
spatial_lookup_sql
