need
using
get_choices_default
fk
AttributeError
right
objects
content_type
object_id_converter
m2m_target_field_name
generic_inlineformset_factory
serialize
loading
possibly
respectively
parent
subclasses
partial
superclass
isinstance
prefix
each
A
behavior
instances
I
GFK
GenericRelation
naive
ct_field
inline
get_content_type
FK
rel_obj
do
_
get_choices
ensure
fk_field
f
define
g
stacked
e
ReverseGenericRelatedObjectsDescriptor
a
DEFAULT_DB_ALIAS
object_id
join
pre_init
Avoid
t
s
get_formset
having
rel
classmethod
comments
args
db_table
exception
by
same
has
sender
Connect
propagate
future
any
be
db
get
GenericRel
code
GenericStackedInline
ct
editable
items
better
names
doing
column
Return
ManyToManyRel
example
save_as_new
update
val
Field
connect
set
dealing
max_num
through
Returns
Manager
name
get_for_id
verbose_name
all
ct_fk_field
functionality
You
cache_attr
makes
at
get_attname
ret_val
get_for_model
never
expected
which
see
relations
Override
there
an
_db
rel_model
attributes
accessed
they
cached
manager
lower
reason
no
__set__
content_type_field
GenericRelatedObjectManager
BaseModelFormSet
contenttype
Since
get_internal_type
of
has_delete_permission
given
ticket
relobj
only
on
GenericInlineFormSet
done
pointed
fkeys
publications
router
add_virtual_field
them
IDs
then
get_object_for_this_type
m2m_reverse_target_field_name
__future__
Impossible
ContentType
m2m_db_table
pk
different
descriptor
get_field
declared_fieldsets
django
looking
clear
instaed
allowing
encoding
rather
BaseGenericInlineFormSet
formfield_callback
instance_type
files
db_manager
formfield_for_dbfield
exclude
limit_choices_to
hasattr
per
model_class
m2m
s__in
PK
account
obj
efficiency
prefetch_cache_name
opts
db_type
save
db_for_read
type
related
love
more
ManyToManyField
results
objs
unicode_literals
request
when
value
none
appropriate
such
instance_dict
here
Factory
bulk_related_objects
source_col_name
can_order
pieces
called
get_prefetch_query_set
instance_pre_init
this
Convenience
In
save_instance
set_attributes_from_rel
add
RelatedManager
id
super
contenttypes
rel_name
get_model
importing
extend
into
_base_manager
list
Dynamically
ObjectDoesNotExist
Meta
create_generic_related_manager
modelformset_factory
understand
filtered
edit_inline
Classes
don
pop
its
pos
defaults
value_to_string
content_type_field_name
__get__
can_delete
happen
template
is_cached
cls
defined
getattr
available
__class__
models
content
__init__
formset
queryset
own
Provides
we
data
use
tabular
loops
_state
We
fk_dict
app_label
best
save_new
collections
alters_data
up
field
either
arguments
admin
accessor
to
provide
both
quote_name
gfk_key
must
takes
values
commit
flatten_fieldsets
contribute_to_class
Add
instance
fields
so
new_obj
relation
ForeignKey
that
object_id_field
RelatedField
to_python
than
s__exact
related_name
Exception
model
ct_id
signal
well
re
core_filters
kwargs
pk_val
GenericTabularInline
KeyError
fkey
performance
functools
_meta
attname
qs
multiple
s_cache
qn
negate
get_prep_value
provides
you
reference
extra_filters
effect
object_name
html
get_readonly_fields
core
weak
fk_name
Save
_kwargs
_prefetched_objects_cache
via
defaultdict
avoid
circular
simulating
are
get_query_set
_get_pk_val
ops
m2m_column_name
form
extra
Take
object_id_field_name
db_for_write
like
create
target_col_name
myself
get_default_prefix
_default_manager
some
Make
ct_attname
contribute_to_related_class
remove
pair
query
s__
__
This
exceptions
GFKs
symmetrical
delete
options
ModelForm
module
blank
let
avoids
should
article
contrib
Handles
but
managers
get_all_objects_for_this_type
adds
remote
InlineModelAdmin
function
s__pk
doesn
fk_val
totally
returns
pk__in
custom
sure
work
initializing
connection
signals
TypeError
default
weakrefs
match
filter
generic
setattr
have
one
attribute
convert
object
another
order
callable
GenericInlineModelAdmin
lookups
For
smart_text
Python
forms
GenericForeignKey
m2m_reverse_name
FormSet
the
utils
include_blank
group
their
