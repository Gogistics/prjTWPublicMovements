user_key
delete_multi_async
particular
float
Raises
time
levels
created
delete_status_list
Increment
MemcacheSetRequest
objects
decrement
these
basestring
Defaults
Utility
conditions
Deletes
bit
hits
set_set_policy
native
App
prefix
bin
each
existed
prepended
Pickler
tuples
__offset_hook
Pickles
compatibility
A
initial_value
made
DELETE_NETWORK_FAILURE
debug
side
set_key
set_delta
_pickler_factory
g
d
decr_async
e
keys
a
Response
increasing
meaning
k
i
elapsed
Async
new
including
t
s
r
library
having
hexdigest
Helper
client
distributed
increments
apache
set_servers
has
software
updated
composition
permissions
initialize
processes
AS
hook
append
item_list
automatic
constants
code
much
__get_hook
flush_all
items
override
names
overflow
make
large
_decode_value
update
STAT_BYTE_HITS
tried
through
set_status
response
Sum
MemcacheDeleteResponse
name
An
implied
offset
alike
law
pickleProtocol
By
get_namespace
prepend
New
FlushAll
Looks
Boolean
Error
never
which
replace_multi_async
source
there
accessed
reason
Method
Unimplemented
Callable
otherwise
rpc
defaulting
errors
hex
empty
reset
MemcacheFlushResponse
STAT_ITEMS
increment
set_status_size
bad
has_stats
get_multi_async
server_to_user_dict
http
will
STAT_OLDEST_ITEM_AGES
upon
Offsets
ValueError
express
clear
OK
normally
unpickled
encoding
OF
unpickler
DECREMENT
note
No
OR
MemcacheSetResponse
sending
ASCII
okay
On
create_rpc
method
capabilities
apply
integers
single
contains
_incrdecr
since
where
type
related
python
memcached
MemcacheFlushRequest
STAT_HITS
hit
Pickle
request
CAS
obscure
required
argument
wrap
onto
new_value
_persistent_id
Number
means
here
IS
requires
MAX_KEY_SIZE
whole
UserRPC
If
resp_item
Optional
_do_pickle
Either
In
Delta
writing
memcache_service_pb
automatically
corresponding
bits
below
getvalue
_not_
zip
added
alias
your
_cas_ids
pid
Replace
_validate_encode_value
docstring
schedule
timeout
changes
limited
Statistics
Unknown
maintain
_app_id
Atomically
STAT_MISSES
its
customer
validate
iterkeys
boolean
along
copy
Values
__incrdecr_hook
isn
contents
To
under
__get_stats_hook
delete_item
always
MemcacheIncrementResponse
__init__
system
namespace_manager
specify
indicates
deadline
apiproxy_errors
Provides
RuntimeError
complex
use
setup_client
_add_name_space
Clear
Compare
run
Unpickles
absolute
Apache
decoding
We
check_success
best
usr
Client
lifetime
STAT_BYTES
back
utf
supplied
singular
debuglog
bulk
math
app_override
talking
either
original
messagecol
must
Tuple
values
populate
Internal
Set
iterable
agreed
loads
Value
Arguments
Therefore
whose
condition
byte_hits
Gets
explanation
REPLACE
Replaces
api_base_pb
failure
case
Unpickler
_CLIENT
_persistent_load
oldest
immediately
ADD
attempt
cas
can
governing
www
incremented
set_expiration_time
performance
multiple
invokes
detils
TYPE_PICKLED
protocol
_async
helper
counter
you
See
originally
usage
reducing
tuple
everything
disconnect_all
zero
info
set_value
stored_value
pairs
return_value
like
Typical
non
many
DELETE_SUCCESSFUL
unpickling
some
Use
Unix
bytes
put
purposes
recommended
retrieval
mapping
This
corresponds
serialized
delete
Copyright
Dictionary
_set_multi_async_with_policy
just
networking
module
post
cache
_unpickler_factory
bogus
add_multi_async
env
len
already
stored
shard_number
process
caps
License
CapabilitySet
_do_unpickle
successfully
Total
Resets
TYPE_UNICODE
but
get_result_hook
All
used
set_name_space
been
specialized
namespace
function
LICENSE
doesn
sent
result_dict
has_new_value
longer
recursion
status
format
deleted
They
batch
pickle
representation
policy
match
evicted
And
_make_async_call
Instance
persistent_id
Any
persistent_load
MemcacheDeleteRequest
stats
state
calling
complicated
pickled
encoded
misses
because
user_data
API
another
details
callable
pool
hash_value
pickler
won
Python
exist
retrieved
name_space
get_multi
clear_name_space
detect
check
ANY
pressure
decimal
around
Non
Closes
appengine
instead
incr
their
user
first
miss
storage
total
reliable
using
said
do_pickle
store
replace_multi
higher
TYPE_INT
_incrdecr_async
failing
HIGHEST_PROTOCOL
server_key
over
globals
thread
something
add_key
TYPE_BOOL
MemcacheIncrementRequest
once
__delete_hook
number
apiproxy_stub_map
fetched
isinstance
status_dict
retain
forget_dead_hosts
cPickle
typically
decr
indicate
sha1
Logging
Internally
could
Create
current
do
look
safe
may
get_stats
integer
MemcacheGetRequest
Inc
desired
RPC
NOT_FOUND
Get
returned
Unless
DELETE_ITEM_MISSING
methods
set_multi_async
docs
normal
by
long
same
returned_item
completion
TYPE_LONG
key_prefix
__flush_all_hook
latency
expose
any
optional
Shouldn
MemcacheBatchIncrementResponse
key
be
min_compress_len
cas_multi_async
get
set_status_list
Prefix
replaced
iff
maximum
var_dict
doing
containing
pload
does
ignored
aren
set
existing
Returns
statistics
FLAG_COMPRESSED
_add_app_id
mutable_override
cas_reset
raw_key
types
KIND
List
all
You
Expiration
ids
PicklingError
at
still
Sets
memory
message
see
an
TYPE_STR
they
no
determine
of
operation
add_multi
on
only
ok
add_item
fetch
offset_multi_async
structure
Ignored
op
oldest_item_age
initial_flags
Effectively
earlier
do_unpickle
them
then
month
different
accessing
server_keys
series
incoming
unset_list
ll
occurred
WITHOUT
Engine
_is_pair
hashing
sharding
CONDITIONS
ERROR
set_multi
completed
similar
Future
Populate
requesting
Keys
set_initial_flags
specified
persistent
_pickle_protocol
decremented
item
callback
obj
cas_id
iter
second
being
make_call
actually
buffer
level
more
results
_set_multi_with_policy
set_cas_id
when
value
sets
Delete
DataStore
for_cas
cas_multi
offset_multi
such
int
cStringIO
relative
underflow
MemcacheBatchIncrementRequest
called
NOT_STORED
included
this
_key_string
runtime
limitations
way
set_initial_value
includes
applicable
add
network
was
id
StringIO
appropriately
able
various
overwrites
INCREMENT
application
it
gets
list
MemcacheStatsRequest
two
hashed
decrementing
set_app_id
found
Key
handle
don
passed
meanings
received
occurs
BatchIncrement
NOT
asynchronous
option
memcache
defined
how
set_delete_time
expiration
iteritems
available
__set_with_policy_hook
statistic
_set_with_policy
load
client_obj
we
ways
make_sync_call
specifying
ceil
data
collection
resulting
floored
The
survive
debugging
rounded
With
reduces
flags
previous
Note
cannot
item_size
up
field
replace
set_direction
seconds
transferred
string
part
respect
to
decrements
provide
HTTP
CAPABILITY
retrieving
amount
expiring
takes
get_result
FLAG_
MemcacheGetResponse
parameters
connections
instance
Version
so
transient
Rolls
NOTE
retrievals
size
that
input
Several
str
associated
EXISTS
than
due
previously
set_flags
overflows
result
sub
dump
strings
re
SET
complete
deltas
servers
increment_status
too
functions
incrementing
unicode
supporting
invoke
service
provided
server
Stats
operations
Google
serial
success
via
MAX_VALUE_SIZE
test
accept
STORED
repr
are
fail
initial
file
Even
UnpicklingError
ops
information
FLAG_TYPE_MASK
compare
delta
did
prevent
create
without
get_stats_async
present
obtain
language
locked
set_for_cas
google
pair
failed
Request
hashlib
org
kind
version
is_negative
length
api
Memcache
transparently
One
DELETED
want
regardless
purely
Float
app
expire
dictionary
unsigned
should
developers
pickling
Unlike
based
MemcacheStatsResponse
type_number
compliance
alive
race
though
requests
were
incr_async
returns
Initial
positive
work
encode
delete_multi
marked
succeed
hash
flush_all_async
protobuf
WARRANTIES
TypeError
Populates
default
popular
didn
efficient
ever
dict
other
have
specific
direction
one
object
licenses
Creates
Args
shard
Licensed
How
error
epoch
the
deals
BASIS
nearest
pickle_data
entry
remembered
bool
negative
