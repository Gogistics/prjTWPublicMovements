EMXCCompiler
That
Uses
particular
coded
augment
time
Raises
event
objects
generation
right
bare
these
shared_object
distinction
essential
duplicate
notion
target_desc
Detect
Subclasses
possibly
respectively
Utility
Do
project
bcpp
lines
each
components
tuples
D
compatibility
A
C
dependent
L
debug
link_shared_lib
I
_fix_compile_args
mkpath
U
ensures
aesthetic
times
mention
Mingw32CCompiler
lib_file
ensure
classes
f
define
g
e
c
keys
a
n
o
m
join
undefn
set_link_objects
i
w
new
t
including
utility
s
base
library
having
Helper
libraries
include_dirs
basis
client
settings
has
invalid
basic
component
mixing
Typecheck
alongside
append
execute
filenames
add_include_dir
library_dir_option
Microsoft
code
indicating
preferred
much
delimited
names
override
linking
set_executables
factory
module_name
hope
named
lfoo
klass
set_executable
prejudiced
Contains
creator
completely
following
possible
name
pay
tries
keeps
Distutils
depend
subsequence
emxccompiler
compilation
main
therefore
never
expected
which
source
take
there
attributes
package
otherwise
redefined
languages
help
errors
given
basename
empty
consists
mentions
Currently
mingw32
itself
lib_opts
listed
element
interpreted
support
searching
Mingw32
set_libraries
job
print_help
bad
cygwinccompiler
abstraction
will
bar
binary
obj_extension
explicitly
announce
executable
preceding
ValueError
build
OK
normally
supported
rather
built
note
rewritten
OS
links
unknown
UNIX
positional
On
per
link_
implements
method
force
language_map
cut
warning
mustard
single
objc
compilations
since
build_temp
every
where
type
ext
python
source_filenames
cxx
exact
target_lang
useful
dirs
argument
dylib
linkage
means
here
embedded
extra_postargs
If
LibError
util
exe
In
__revision__
SHARED_OBJECT
pretty_printer
It
paths
allows
corresponding
below
path
relevant
building
added
your
into
inherited
generating
interface
lib_dir
plat
implementation
things
modules
Overrides
Visual
step
mkstemp
treatment
etc
nice
EXECUTABLE
Compiler
exactly
basically
boolean
entirely
static
To
under
consistency
ImportError
fancy_getopt
log
calls
structures
prep
__init__
cmd
system
runtime_library_dirs
eliminate
sort
add_link_object
archiver
use
platforms
run
useless
written
depending
CygwinCCompiler
show_compilers
supplied
works
math
either
output_libname
arguments
dir_util
original
newer_group
Generate
funcname
world
undefinitions
pp_opts
perform
Output
must
backslashes
necessarily
osname
Extension
Ldir1
Ldir2
values
province
Add
Set
retaining
shared
cpp
shared_library
freaky
behind
possibility
Also
sysconfig
Print
vars
failure
XXX
several
case
dep_util
identifies
valid
generate
can
Cygwin
posix
tempfile
question
attention
multiple
successive
__name__
add_runtime_library_dir
Guarantees
you
See
extindex
anything
pre
_need_link
actual
add_library
latest
Anyways
unix
macros
instructed
tuple
variability
library_filename
towards
extensions
avoid
spawn
drive
fdopen
_find_macro
compiler_type
fname
platform
pairs
mainly
extra
_default_compilers
matters
like
many
static_lib_extension
now
combination
say
some
port
Unix
put
remove
range
backward
compiles
link
line
This
escape
lbar
words
emx
probably
lib_name
opposed
prob
options
just
module
resolve
len
already
framework
arrange
really
compiled
library_option
compiler
Abstract
Chop
but
UnixCCompiler
Win32
lib_type
used
preserve
sources
together
function
dependency
doesn
granularity
_get_cc_args
func
sure
_lib_extension
nasty
linker_so
shared_lib_format
incdirs
NotImplementedError
definitions
format
wants
knows
cc_args
DOS
match
output
chop
link_executable
And
call
decide
setattr
redundant
attribute
because
details
full
Python
incl
detect
definition
UnknownFileError
src_extensions
msvc
os2emx
replacing
lib
target
Determine
their
first
searched
need
set_library_dirs
DistutilsModuleError
supports
outdir
exe_extension
missing
over
search
splitdrive
Platform
ordinary
set_runtime_library_dirs
patterns
define_macro
optimization
subclasses
header
isinstance
explicit
view
go
idea
before
output_filename
preprocessor
locations
Perhaps
mappings
domain
current
write
do
_setup_compile
checking
targets
Miscellaneous
look
LinkError
PreprocessError
may
traditional
ones
fd
splitext
eg
Link
what
ANSI
strip_dir
newer
nothing
clever
Get
et
returned
methods
least
args
However
normal
stupid
recompiled
by
same
language_order
close
slight
would
_compile
optional
any
argc
analogues
Borland
output_progname
depends
DEBUG
key
dirname
be
think
replaces
get
likely
Splitting
move_file
obj_names
near
redundancies
against
CCompiler
containing
Return
argv
example
cc
thing
coarse
does
ignored
output_dir
set
sake
dealing
former
Returns
style
link_shared_object
List
types
all
export
makes
backwards
at
still
stages
gcc
al
unixccompiler
see
an
off
nt
they
extlang
no
quoting
anyways
UNIXish
fixed
of
macro
abs
convenience
correct
verbose
on
only
os
suitable
maybe
done
steps
reality
include
create_static_lib
isabs
Preprocess
libname
preprocess
them
build_ext
then
comment
winds
varied
different
most
_fix_object_args
looking
Idir1
Idir2
compiler_class
add_library_dir
src
situation
null
similar
usual
files
Specifically
true
outcome
Keys
Windows
extension
product
specified
additional
obj
Private
individual
last
sometimes
recreate
char
being
actually
split_quoted
level
more
detect_language
bcppcompiler
when
Process
value
perfectly
Define
certainly
Delete
appropriate
such
Thus
Map
int
Other
executables
relative
runtime_library_dir_option
describing
flag
undefine
_check_macro_definitions
stuff
permanent
operate
included
this
scope
commands
becomes
runtime
way
stderr
has_function
add
includes
affect
real
driven
deciding
ie
shared_lib_extension
various
treated
skipping
less
abstract
those
it
standard
defn
linker_exe
extend
important
similarly
CompileError
msvccompiler
resource
list
know
new_compiler
_lib_format
two
quotes
necessary
found
These
handle
don
passed
weeding
defaults
dry_run
export_symbols
option
going
defined
how
getattr
searchg
available
__class__
distutils
long_description
defines
leading
load
split
assumed
ways
we
common
progname
sys
data
ccompiler
The
older
debugging
hard
ability
mostly
compiling
flags
undefinition
implemented
FancyGetopt
Note
augments
undefine_macro
get_default_compiler
cygwin
up
replace
Bookkeeping
EMX
pattern
string
libnames
documentation
discovered
happens
Ensures
to
library_dirs
both
provide
_fix_lib_args
dst
handled
Filename
takes
static_lib_format
src_name
parameters
instance
index
text
unable
so
intended
executable_filename
msg
logic
reduce
that
str
widely
libfoo
than
Compile
prepand
model
stdout
about
strings
re
lang
appears
customize_compiler
Worker
KeyError
undefined
undefines
supply
implement
bunch
__import__
compilers
consult
top
Depending
DistutilsPlatformError
needed
tracking
certain
out
shell
Search
via
Similar
foo
relink
whether
course
expect
authors
are
directories
file
Old
processor
opt
occasions
inlined
Default
information
BCPPCompiler
form
debug_print
create
without
concrete
punting
GNU
symbols
language
ask
cross
gen_preprocess_options
might
fmt
plugging
mentioned
appending
class_name
updating
costs
kind
mode
version
typical
presumably
compile
command
extra_preargs
shells
rely
responsible
output_file
dictionary
should
point
directory
SHARED_LIBRARY
Undefine
find_library_file
redefinitions
though
translated
were
dedicated
three
linked
object_filenames
work
linker
spaces
sense
shared_object_filename
gen_lib_options
TypeError
default
environment
build_clib
Later
program
subclass
even
hatch
dll
perhaps
warn
other
allow
have
specific
precedence
one
Order
object
pretty
MSVCCompiler
file_util
parameter
order
dir
fix
For
lists
find
wasn
the
$Id$
inferred
versions
filename
set_include_dirs
