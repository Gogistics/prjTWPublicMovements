need
using
backends
particular
pop
manage
Development
safestring
production
FIELD_TYPE
Raises
defaults
over
time
CursorWrapper
_SETTINGS_CONNECT_ARGS
_last_ping_time
copy
alternate
Placeholders
under
__class__
When
apiproxy_stub_map
__init__
project
App
split
bin
specify
mysql
compatibility
oauth2client
oauth2_refresh_token
acts
communications
specifying
simple
sys
made
use
speckle
run
running
SERVER_SOFTWARE
imported
executed
The
Apache
rdbms_apiproxy
could
token
BaseDatabaseOperations
current
conv
do
usr
SafeString
communicates
https
MySQL
may
a
o
Inc
selection
USER
either
arguments
s
backend
sequence
string
base
Additional
interact
configuration
variable
Unless
to
com
instructions
client
args
settings
DEV_SERVER_SOFTWARE
distributed
apache
by
same
must
sender
Connect
HOST
software
values
old_modules
oauth2
invalid
any
permissions
parameters
Version
instance
DATABASES
be
follow
agreed
AS
db
get
so
Gets
manually
constants
DatabaseOperations
converters
replaced
setdefault
GetStub
that
str
containing
example
module_name
update
raw
attempt
valid
PROD_SERVER_SOFTWARE
syncdb
connect
can
governing
www
DatabaseClient
through
Returns
Cursor
kwargs
modules_to_swap
dev_appserver
_valid_connection
name
Imports
An
implied
KIND
authenticating
__import__
law
DatabaseWrapper
accounts
You
unicode
CLIENT_ID
__name__
at
_GetDriver
you
INSTANCE
See
settings_dict
py
dsn
an
actual
provided
core
Google
OPTIONS
kwarg
ApiProxy
Service
cursor
mypassword
no
otherwise
determine
base_pkg_path
Before
persist
CLIENT_SECRET
PING_INTERVAL_SECS
operation
of
given
OAUTH2_SECRET
wrapper
file
connection_created
on
credentials
connects
refresh
ping
ops
fetch
os
SQL
suitable
NAME
like
Communicating
placeholders
conveniently
rdbms_googleapi
many
present
obtain
http
will
utilize
language
outside
put
google
CLIENT
query
MySQLdb
django
recommended
line
myusername
Django
express
org
This
WITHOUT
Engine
exceptions
transport
CONDITIONS
command
OF
Copyright
api
Apiproxy
PASSWORD
_cursor
app
module
mydb
vendor
subsequent
apiproxy
env
No
access
ENGINE
should
OR
sql
specified
License
SafeUnicode
force
warning
based
encoders
users
send
last
endswith
disk
compliance
every
used
password
function
python
LICENSE
requests
tools
USER_AGENT
when
proceed
server_software
value
OAuth2
required
connection
appropriate
OAuth
IS
logging
OAuth2Credentials
WARRANTIES
requires
last_executed_query
signals
TypeError
pieces
environment
default
representing
GAE
subclass
Valid
ImproperlyConfigured
If
this
management
django_conversions
other
Disable
driver_name
specific
oauth_storage
commands
limitations
writing
licenses
applicable
Connection
was
super
Proxy
API
Args
allows
automatically
Licensed
driver
For
FLAG
GOOGLE_SQL_OAUTH2_REFRESH_TOKEN
getenv
application
it
ANY
alias
aquire
keyword
list
oauth2storage
params
the
BASIS
database
section
settings_key
around
rdbms
appengine
Using
utils
instead
context
modules
Overrides
user
first
set_store
found
storage
