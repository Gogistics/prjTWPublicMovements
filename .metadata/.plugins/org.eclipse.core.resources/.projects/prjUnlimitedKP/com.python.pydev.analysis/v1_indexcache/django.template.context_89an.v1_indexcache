need
using
store
don
pop
AttributeError
procedural
place
copy
__repr__
template
going
defined
scoping
duplicate
getattr
mod
ImportError
rendered
variables
__init__
somebody
each
we
A
fails
before
conf
context_processors
The
leave
times
We
current
import_module
HttpRequest
define
safe
d
e
a
i
current_app
new
t
s
what
nothing
Additional
_builtin_context_processors
Get
importlib
variable
afford
to
render_context
instructions
settings
normal
by
same
has
must
values
would
Set
rfind
key
be
append
execute
get
templates
providing
code
storing
render
that
failure
node
than
collect
does
update
Exception
can
_standard_context_processors
Returns
__delitem__
use_l10n
KeyError
populates
top
Template
other_dict
at
invocations
provides
upward
Error
csrf
get_standard_processors
TEMPLATE_CONTEXT_PROCESSORS
ContextPopException
callables
actual
core
has_key
they
simplifies
tuple
no
otherwise
Module
repr
of
are
given
only
processor
itself
creating
attr
like
sensible
http
container
__iter__
vulnerability
autoescape
__contains__
dictionaries
CSRF
django
mapping
This
exceptions
starting
rather
reversed
want
dicts
migration
module
RequestContext
len
Pushes
dictionary
stored
RenderContext
hasattr
specified
dict_
method
but
been
__setitem__
function
were
more
level
Context
request
value
__getitem__
func
Delete
argument
Thus
Cache
properties
TypeError
subclass
called
ImproperlyConfigured
BaseContext
stack
Nodes
this
dict
scope
other
specific
state
object
security
resolution
affect
push
super
because
callable
fresh
automatically
path
_reset_dicts
read
between
importing
it
error
matter
new_context
extend
keyword
list
the
processors
rules
human
rendering
Name
utils
implementation
context
pushed
uses
local
their
user
also
__copy__
found
