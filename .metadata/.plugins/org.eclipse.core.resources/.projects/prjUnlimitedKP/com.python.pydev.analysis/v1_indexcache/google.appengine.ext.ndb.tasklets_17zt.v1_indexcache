getLogger
time
compared
semantics
nCreated
created
threads
event
finishes
thereby
_next
right
bare
notion
extract
Isn
App
multi
lines
each
compatibility
unique
Decorator
HTTPException
vastly
A
behavior
dependent
made
_flow_exceptions
debug
O
I
QueueFuture
inefficient
times
_full
_
classes
f
g
e
b
a
n
join
v
new
t
Links
s
r
q
_where
public
Helper
x
suspend
Hold
exception
add_callback
dynamically
consumer
get_event_loop
has
Should
Rework
initialize
append
yielding
derives
code
indicating
much
Have
make
val
Each
At
Greg
As
datastore_errors
atomic
possible
following
Twisted
callbacks
An
tries
waiting_on
complains
get_namespace
finished
Error
main
_mark_finished
neither
__all__
never
which
flush
retrieve
take
there
google_imports
Throwing
_context
tasklets
rpc
errors
_done
empty
ctx
itself
transfer
support
Already
prone
__ndb_debug__
http
will
propagated
todo
clear
simpler
tests
clarifies
ds_conn
supported
synctaskletfunc
waiter
note
rewritten
sleeps
No
OR
positional
method
force
get_traceback
warning
single
emulate
Within
since
type
Context
Actually
request
Callback
webapp
writes
_exception
argument
wrap
means
here
apiproxy_rpc
queue_rpc
UserRPC
exc
If
_pass_eof
In
It
considered
super
Ensure
automatically
below
added
reuse
new_context
Completed
your
into
Monocle
interface
things
also
discussion
HIRO
etc
fut2
fut1
pop
its
flow
_geninfo
exactly
synctasklet
feature
Deadlock
entirely
__repr__
Values
cls
coroutine
Callbacks
waiting
Steve
To
eventloop
make_context
ImportError
always
log
calls
__init__
exc_info
_queue
namespace_manager
dummy
behave
RuntimeError
conn
use
RPCs
Compare
run
Code
RUNNING
check_success
collections
From
Flatten
add_pending
func_info
either
presence
GeneratorExit
wait_any
become
_completed
busy
datastore
reordered
must
Tuple
values
care
Add
Internal
iterable
control
schedules
as_set
declaration
condition
behind
Also
BaseException
XXX
goo
Or
several
case
got
early
immediately
Flow
legal
IDLE
Exception
can
invoked
_State
So
Example
TODO
Hide
marking
multiple
invokes
protocol
helper
__name__
you
soon
See
err
Info
implementing
somewhat
tuple
threading_local
mechanism
Constants
After
info
docstrings
unused
Result
decorator
flushed
like
Wrapping
non
many
nor
now
yieding
_signal_dependent_done
some
Use
remove
Trim
line
get_exception
_result
This
exceptions
indirectly
twice
traceback
maintains
Just
just
toplevel
module
cases
whilst
already
len
framework
make_default_context
Rollback
but
send
rename
add_context_wrapper
adds
All
used
finishing
together
function
sent
longer
func
recursion
status
logging
NotImplementedError
mark
Like
signals
match
retrieves
call
issue
state
_reset
set_namespace
calling
appends
purpose
turns
API
another
Yield
ReducingFuture
blocked
won
resumed
Python
retrieved
getenv
Now
Not
utils
instead
special
uses
their
first
need
Extra
using
wait
unbounded
webob
until
add_flow_exception
insertion
Separate
thread
But
something
once
sleep
set_context
apiproxy_stub_map
Cannot
blocking
gl
isinstance
eat
view
tasklet_wrapper
dt
set_result
_on_future_completion
before
main_tasklet
instances
handling
all_pending
execution
faster
sync
_GetConnection
computed
Create
loop
write
map
left
do
f1
f2
install
may
ev
constrained
web
blocks
imports
RPC
what
nothing
Alternative
classmethod
returned
MultiRpcs
Maybe
yet
methods
args
However
least
_internal_add_dependent
by
same
completion
poll
deal
future
any
Queue
depends
DEBUG
be
gen
get
save_ds_connection
better
Return
example
SerialQueueFuture
Another
issubclass
thing
does
aren
Late
set
Query
Otherwise
Returns
expects
throw
waits
gwrap
handy
Run
types
all
wraps
signalling
You
yields
makes
ahead
at
synctasklet_wrapper
overload
still
According
add_dependent
see
sec
an
logging_debug
they
ns
no
idiom
intending
save_namespace
operation
of
futures
verbose
pending
only
on
decorated
_init_flow_exceptions
os
Invariants
op
done
concurrently
then
_traceback
caller
Tasklets
raised
ll
pep380
Docstring
taskletfunc
most
set_exception
clear_all_pending
Engine
completes
mfut
_CONTEXT_KEY
current_context
mf
situation
inspired
Sending
completed
Future
conformant
subsequent
batch_size
p5Pn
remove_pending
Sleep
callback
obj
queues
insert
EOFError
deque
last
being
more
level
results
wait_all
when
value
sets
Futures
returning
gen_info
such
environ
heavy
statement
_dependents
flag
Invariant
called
stack
this
_pass_result
equivalent
insight
way
add
believe
subfuture
was
PEP
id
generator
Remove
treated
_immediate_callbacks
getq
dependents
application
it
important
list
two
__del__
removes
eating
local
themselves
lets
Hazel
worry
found
suboptimal
handle
don
passed
tasklet
received
passes
ready
EOF
turn
defined
available
__class__
When
Calling
run1
_SetConnection
ways
we
sys
simple
next
save_context
logged
running
StopIteration
imported
executed
The
defer
_state
fut
reducer
catches
implemented
Note
__CONTEXT__
get_stack
_is_generator
cannot
up
replace
producer
documentation
runs
part
wrapping
to
v1
Arrange
queue
raises
both
v2
half
GeneratorType
handled
after
get_result
takes
tb
get_context
instance
so
Call
NOTE
that
finish
input
frame
str
More
than
_results
MultiRpc
result
dump
about
dump_stack
catch
sum
signal
Beware
re
complete
compatible
Here
above
plain
too
Public
functions
_callbacks
Alias
py
grow
queue_call
operations
success
out
handler
wrapped
via
test
nval
foo
whether
authors
circular
are
fail
wrapper
config
RequestHandler
_reducer
POV
without
add_immediate_callback
FINISHING
_info
Make
generators
_transfer_result
Expected
Django
mode
Time
MultiFuture
want
SKIP
regardless
get_return_value
should
suspended
point
_finish
sublists
What
dump_all_pending
though
internally
were
putq
yielded
returns
directly
_on_rpc_completion
popleft
property
TypeError
default
subclass
even
_help_tasklet_along
perhaps
ever
dependant
datastore_rpc
other
allow
specific
have
one
object
Refactor
share
order
_batch_size
fresh
_logging_debug
kwds
For
Check
error
abstracted
_waiting
the
outer
context
pushed
Tail
