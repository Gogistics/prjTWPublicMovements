using
Model
Iterator
handle
passed
holding
otherwise
pop
Module
of
avoid
fail
given
Init
only
on
along
start_object
Basically
fully
__repr__
deserialization
defined
problems
ends
getattr
serialize
possibly
parent
prevent
available
bad
calls
selected_fields
concrete
non
many
models
loaded
__init__
requested
happened
touch
isinstance
queryset
container
serialization
saving
__iter__
each
serializing
Use
pk
might
stream
A
Iteration
serializer
before
next
data
django
use
handle_fk_field
Django
This
six
iterface
The
serialized
twice
Refs
app_label
proxy
bypasses
encoding
internal
options
just
classes
start_serialization
Deserializer
a
end_serialization
implemented
string_types
local_fields
field
starts
s
m2m
item
string
base
relational
Serialize
obj
rel
handle_field
Abstract
to
accessor_name
second
save
individual
DeserializedObject
been
friends
hack
ManyToManyField
stream_or_string
any
seekable
when
Something
DeserializationError
directly
be
forced
sure
fields
db
Call
saved
use_natural_keys
NotImplementedError
object_list
deserializer
__next__
signals
unserializer
ForeignKey
that
stuff
items
subclass
Return
internal_use_only
deserialized
output
make
this
raw
call
Exception
model
save_base
setattr
have
many_to_many
Called
post_save
SerializerDoesNotExist
object
was
handle_m2m_field
StringIO
KeyError
get_apps
callable
during
_meta
attname
baseclass
accidental
smart_text
get_model
m2m_data
all
getvalue
Indicates
abstract
the
end_object
database
SerializationError
save_m2m
utils
pre
an
object_name
instead
Serializer
also
first
concrete_model
found
