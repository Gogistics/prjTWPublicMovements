xFF
SFixed32Decoder
using
That
varint
particular
truncated
BytesDecoder
float
until
InnerDecode
missing
Raises
_RaiseInvalidWireType
xF0
Skipping
wire_type
parent
number
_SkipVarint
wire_format
bit
fixed32
bin
local_DecodeVarint
A
before
C
callers
net
I
Q
loop
map
current
tell
do
_FieldSkipper
checking
Usually
look
f
define
g
may
d
e
b
a
Inc
i
new
s
q
nothing
construct
public
message_type
returned
Unless
DecodeVarint
x
Skips
message_tag_bytes
constructed
docs
exception
distributed
by
apache
_VarintDecoder
long
software
invalid
would
basic
any
permissions
float_bytes
message_end
had
FloatDecoder
key
be
AS
append
get
_POS_INF
code
double
much
bounds
setdefault
delimited
often
Unpacking
containing
Return
new_pos
does
raw
set
As
Returns
throw
following
implied
types
KIND
all
enum_value
law
Skip
lax
end_tag_bytes
You
depend
at
_EndGroup
SInt64Decoder
message
tag_len
is_repeated
expected
which
take
an
end_tag_len
they
reason
_DecodeError
fixed
of
errors
given
byte
on
WIRETYPE_FIXED32
limit
element
WIRETYPE_TO_SKIPPER
searching
done
StringDecoder
version_info
SpecificDecoder
constructors
include
http
them
value_start_pos
then
will
GroupDecoder
is_packed
caller
MessageSet
express
WITHOUT
looking
CONDITIONS
OF
rather
cheaper
internal
WIRETYPE_VARINT
similar
usual
Decoders
fineto
Unexpected
unknown
type_id
OR
extension
specified
Fixed64Decoder
item
DecodeError
TagBytes
_SkipFixed32
within
SInt32Decoder
encoders
individual
_SimpleDecoder
being
actually
MESSAGE_SET_ITEM_TAG
where
every
type
python
buffer
looks
level
Tag
when
someone
Something
value
Int32Decoder
required
DecodeItem
Missing
returning
such
WIRETYPE_END_GROUP
int
Other
IS
called
stack
this
double_bytes
field_dict
In
fixed64
writing
limitations
add
values_by_number
Is
applicable
Decoded
_DecodeSignedVarint32
was
_SkipFixed64
latin1
allows
corresponding
bits
May
read
local_ord
_SkipLengthDelimited
byte_str
less
constructor
it
_DoubleDecoder
_FloatDecoder
into
e10000
past
field_number
full_name
appear
decode_value
pos
Item
Truncated
elements
signature
copy
UnicodeDecodeError
ends
under
_InternalParse
message_set_item_start
reads
pure
decode
low
we
result_type
Packed
sys
use
new_default
Code
bitwise
messages
Apache
The
defer
decoding
DecodePackedField
We
Int64Decoder
local_SkipField
usr
notice
MakeDecoder
decoder
_SignedVarintDecoder
decodes
x7fffffffffffffff
_DecodeSignedVarint
later
x80
Note
us
utf
up
repeated
works
field
Decode
_NEG_INF
either
arguments
fact
string
x7F
to
WIRETYPE_FIXED64
repeatedly
finite
after
takes
x7f
values
_DecodeVarint
Version
instance
_unknown_fields
fields
agreed
proto2
so
SkipField
width
hashtable
storing
UInt64Decoder
message_start
size
that
WIRETYPE_LENGTH_DELIMITED
than
SimpleDecoder
Read
case
immediately
result
decoders
sub
_PY2
can
packed
trade
governing
catch
about
www
re
_DecodeVarint32
END_GROUP
struct
_concrete_class
consecutively
invokes
MessageDecoder
Indicates
protocol
DecodeField
unicode
primitives
you
wiretype_mask
See
py
invoke
actual
Google
shift
very
py2
tag
tuple
BoolDecoder
lookup
item_end_tag_bytes
local_unicode
are
_fields
file
Too
SFixed64Decoder
table
like
modify_value
endpoint
non
many
obtain
start
local_ReadTag
_StructPackDecoder
language
some
WIRETYPE_START_GROUP
position
google
bytes
indexed
pair
additionally
failed
ord
org
This
length
Copyright
want
end
value_size
extensions_by_number
module
anded
avoids
signed
len
env
already
should
int32
point
Constructs
x00
License
bug
stores
tag_bytes
but
reading
mask
compliance
used
function
LICENSE
FieldDescriptor
local_unpack
returns
proper
_ConvertToUnicode
type_id_tag_bytes
sure
ZigZagDecode
work
enum_type
effectively
encode
goes
hash
wire
_extensions_by_number
IndexError
_NAN
Like
format
WARRANTIES
default
MessageSetItemDecoder
floating
Fixed32Decoder
_ModifiedDecoder
unpack
call
dict
specific
DecodeRepeatedField
Then
convert
calling
ReadTag
object
licenses
encoded
Args
parameter
Licensed
parsing
Python
exist
encoder
error
ANY
calcsize
_SkipGroup
TAG_TYPE_MASK
proactively
the
BASIS
around
EnumDecoder
DoubleDecoder
UInt32Decoder
bool
group
first
