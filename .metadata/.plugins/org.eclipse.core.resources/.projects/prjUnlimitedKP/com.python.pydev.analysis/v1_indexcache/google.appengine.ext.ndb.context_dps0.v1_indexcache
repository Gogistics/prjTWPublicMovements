idlers
_datastore_policy
incompatible
delete_multi_async
time
right
basestring
memcache_add
partial
Do
GET
prefix
multi
each
big
in_transaction
_get_batcher
A
B
initial_value
DELETE_NETWORK_FAILURE
datastore_entities
Corrupt
authority
times
get_async
_
set_key
ignore
classes
define
g
d
e
keys
confused
a
meaning
i
new
t
s
r
Helper
transactions
change
BadArgumentError
entity
exception
add_callback
unused_fut
has
policies
updated
Should
merge_future
max_get
processing
append
_memcache_set_batcher
yielding
allow_truncated
far
indicating
code
ndb
items
pbs
cache_key
urlfetch
active
make
restored
leap
update
val
Store
At
implies
through
datastore_errors
completely
async_rollback
callbacks
An
_update_cache_from_query_result
updates
constant
get_namespace
async_begin_transaction
bubbles
finished
__all__
never
flush
which
take
batch_fut
there
google_imports
cached
otherwise
modelclass
tasklets
rpc
errors
given
byte
empty
Nested
_memcache_off_batcher
get_multi_async
http
NDB9
Will
will
auto
upon
getting
Requires
todo
ValueError
_memcache_get_batcher
clear
allocate_ids
normally
status_key_mapping
Docstrings
supported
rather
unused_value
note
_kind_map
EntityProto
Never
_projection
waited
memcache_replace
opname
MemcacheSetResponse
On
okay
positional
per
conflicting
create_rpc
worries
method
get_traceback
warning
headers
apply
memcache_delete
single
since
memcache_gets
type
fires
Context
Actually
hit
request
CAS
action
Callback
required
argument
Raise
means
Cache
here
_clear_memcache
async_put
If
_memcache_timeout
Optional
In
tctx
It
read_policy
below
zip
into
adapter
FIFO
also
timeout
Model
_key
pop
its
_get_memcache_deadline
get_memcache_timeout_policy
along
__repr__
Values
cls
eventloop
entities
calls
log
variables
__init__
exc_info
system
nesting
namespace_manager
dummy
specify
deadline
RuntimeError
conn
add_idle
fails
_memcache_prefix
coordination
use
RPCs
run
_has_complete_key
scenarios
make_fetch_call
We
proxy
written
depending
Client
MultiRPC
transactional
back
seen
seem
either
arguments
original
retries
GeneratorExit
Upon
overridable
repeatedly
get_cache_policy
datastore
must
uninitialized
_use_datastore
values
Add
Set
enabled
whose
explanation
Also
url
vary
BadRequestError
_LOCK_TIME
XXX
goo
autobatcher
case
got
immediately
attempt
cas
Exception
valid
can
futs
config_cls
Passes
So
TODO
multiple
invokes
helper
_batchers
__name__
you
_DefaultAppId
Configuration
See
immediate
_from_pb
validate_certificate
registered
async_get
err
LBYL
very
clause
tuple
Life
zero
After
info
datastore_keys
docstrings
set_datastore_policy
Unify
Init
working
pairs
mainly
again
non
bubble
now
parent_context
_get_tasklet
some
follow_redirects
Send
put
bytes
remove
translation
xrange
mapping
get_exception
_get_memcache_timeout
This
exceptions
twice
lo_hi
delete
starting
options
just
toplevel
resolve
overrides
cache
already
len
ent
process
really
set_cache_policy
_memcache_get_tasklet
Rollback
but
transaction
Remember
raising
All
statuses
used
been
function
namespace
defers
doesn
differs
_queues
func
synchronous
_OPTION_TRANSLATIONS
connection
status
set_memcache_policy
logging
mark
deleted
async_commit
batch
policy
call
issue
state
_parent_context
currently
iter_query
Copy
because
another
API
full
MAX_DELETE_KEYS
_cache
exist
retrieved
get_multi
NESTED
_on_commit_queue
_on_idle
check
keyword
replacing
Now
painful
diagnose
Not
utils
instead
their
user
_use_cache
first
miss
using
store
wait
until
Fire
ConfigOption
propagation
nondeterministic
limits
Nothing
once
engine
serialize
parent
number
set_context
get_datastore_policy
Cannot
Batches
gl
Clears
isinstance
explicit
explain
TransactionFailedError
typically
set_result
before
leave
could
Create
_GetConnection
map
current
write
loop
do
commits
memcache_set
look
TransactionalConnection
may
max
entity_pb
default_model
integer
postponed
_auto_batcher_class
desired
Avoid
fire
RPC
altered
configurable
what
exists
Get
successful
construct
notes
configuration
Pass
returned
Maybe
methods
_LOCKED
However
ALLOWED
by
long
same
completion
who
would
future
any
_old_ds_conn
key
be
default_memcache_policy
_memcache_set_tasklet
get
differently
get_indexes
better
Return
example
SerialQueueFuture
get_memcache_policy
issubclass
Entity
thing
does
ignored
set
existing
Returns
__delitem__
use_datastore
waits
all
appeared
ids
at
memory
see
an
logging_debug
forget
why
they
ns
max_delete_keys
no
TransactionOptions
ultimate
of
operation
futures
verbose
combine
only
on
ok
limit
creating
offset_multi_async
default_memcache_timeout_policy
done
_make_ctx_options
mkey
max_delete
committed
them
pb
memcache_deadline
taskqueue
different
moment
async_delete
set_exception
autobatchers
mfut
remaining
async_get_indexes
batches
ERROR
batcher
async_allocate_ids
Future
memcache_timeout
default_cache_policy
_memcache
collected
tconn
outcome
flight
ctx_options
attached
callback
Wait
queues
EOFError
staticmethod
individual
on_commit_callback
being
actually
INDEPENDENT
more
results
when
use_memcache
value
Futures
Delete
for_cas
such
inq
int
Rinse
flag
representing
todo_tasklet
called
release
this
memcache_decr
_cache_policy
projection
way
max_put_entities
add
affect
network
add_once
interchangeably
was
May
getq
_delete_tasklet
it
_use_memcache
gets
make_connection
list
async
two
found
Special
Key
passed
tasklet
received
passes
_memcache_timeout_policy
defaults
_todo_tasklet
option
Out
memcache
use_cache
getattr
expiration
There
available
__class__
When
run1
urlsafe
we
_SetConnection
abandoned
_running
MergePartialFromString
sys
simple
_delete_batcher
running
call_on_commit
The
accepts
max_get_keys
fut
direct
later
Note
up
replace
seconds
string
runs
variable
keep
to
queue
both
raises
index_list
substitute
after
get_result
tb
commit
MANDATORY
ordering
Invalid
instance
ContextOptions
so
Call
unused_key
NOTE
cached_ent
size
properly
that
_put_tasklet
than
result
model
Update
auto_batcher_class
about
repeat
mvalue
well
max_memcache
re
_finished_callback
max_memcache_items
complete
max_put
Here
ancestor
too
Adds
conflicts
functions
clear_cache
popitem
provides
default_datastore_policy
methodname
invoke
operations
handles
out
_use_
MAX_VALUE_SIZE
payload
STORED
whether
distinct
map_query
arg
memcache_cas
are
wrapper
fail
AutoBatcher
config
Default
_lookup_model
singleton
SerializePartialToString
delta
prevent
without
add_immediate_callback
locked
Make
ProtocolBufferDecodeError
JQZxp
pair
query
failed
encountered
Expected
batchers
Might
kind
Time
respective
length
Memcache
_conn
MultiFuture
_put_batcher
Please
run_queue
app
get_return_value
unused_delta
should
_multi_async
point
Eventloop
MAX_PUT_ENTITIES
_to_pb
users
EVENTUAL_CONSISTENCY
_load_from_cache_if_available
What
jxjOP
Constant
run_to_queue
requests
were
putq
ProtocolBuffer
set_memcache_timeout_policy
returns
custom
work
idler
memcache_incr
_memcache_del_batcher
memcache_get
TypeError
MAX_GET_KEYS
default
even
didn
datastore_rpc
dict
other
have
specific
one
object
Connection
_memcache_off_tasklet
pass_batch_into_callback
Args
share
order
Support
_memcache_del_tasklet
For
wasn
Check
error
lock
the
batching
_memcache_policy
skipped
key_module
_limit
applied
entry
context
BadKeyError
Don
bool
