These
numeric
Key
Model
_BaseMetadata
its
Property
Kind
of
_EMPTY_NAMESPACE_ID
are
given
created
__kind__
on
get_representations_of_kind
only
unindexed
limit
keys_only
EMPTY_NAMESPACE_ID
cls
parent
available
always
guaranteed
entities
non
models
requested
key_to_property
start
property_representation
simplified
key_to_namespace
_get_kind
Base
offered
range
A
query
use
mapping
This
kind
version
get_kinds
The
datastore_types
__property__
key_for_entity_group
written
current
giving
want
end
get_entity_group_version
app
may
keys
absence
a
dictionary
access
k
cannot
key_to_kind
repeated
eg
On
arguments
t
specified
s
q
string
Namespace
iter
kind_name
classmethod
x
to
apply
key_for_kind
users
but
visible
root
change
entity
HR
datatores
contains
by
every
datastore
function
namespace_name
namespace
__namespace__
values
key_for_namespace
results
optional
ID
returns
StringProperty
key
be
metadata
get
__entity_group__
such
whose
kinds
NOTE
property
properties
namespaces
string_id
get_properties_of_kind
__version__
that
ndb
representation
names
override
Return
containing
subclass
even
queries
this
filter
does
result
dict
model
instantiate
have
Returns
was
Models
id
API
Args
implicitly
name
May
representations
ancestor
exist
HRD
between
lists
all
functions
_use_memcache
helper
property_name
ids
gets
you
list
IntegerProperty
the
EntityGroup
key_for_property
__all__
never
an
increase
Don
get_namespaces
group
user
also
_use_cache
KIND_NAME
changes
